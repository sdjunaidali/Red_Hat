Python 3.4.3 (v3.4.3:9b73f1c3e601, Feb 24 2015, 22:43:06) [MSC v.1600 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> ================================ RESTART ================================
>>> 

	***WEBSITE LIST***

-------------------------------------
 1 : http://fedoraplanet.org/ 
 2 : http://planetpython.org/ 
 3 : http://planet.openstack.org/ 
 4 : http://planet.gnome.org/

-------------------------------------

	(*)Select a Website From List For Website Extraction Process: 1

----------------------------------------------------------------

		REPORT OF Planet Fedora : WEBSITE LINK : http://fedoraplanet.org/

----------------------------------------------------------------

		
		PLANET NAME ->	
Planet Fedora
		
		LAST UPDATED ON ->
Wed, 02 Dec 2015 17:41:08 GMT

---------------------------------------------------------------


AUTHOR & TITLE ->	
Andrea Veri: Three years and counting



POST LINK ->	
https://www.dragonsreach.it/2015/12/02/three-years-and-counting/




---------------------------------------------------------


AUTHOR & TITLE ->	
Daniel Pocock: Is giving money to Conservancy the best course of action?



POST LINK ->	
http://danielpocock.com/is-giving-money-to-conservancy-the-best-course-of-action




---------------------------------------------------------


AUTHOR & TITLE ->	
Richard Hughes: OpenHardware and code signing (update)



POST LINK ->	
https://blogs.gnome.org/hughsie/2015/12/02/openhardware-and-code-signing-update/




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Community Blog: FAmSCo Elections: Interview with Dan Mossor (danofsatx)



POST LINK ->	
https://communityblog.fedoraproject.org/famsco-elections-interview-dan-mossor-danofsatx/




---------------------------------------------------------


AUTHOR & TITLE ->	
Alexander Todorov: Automatic Upstream Dependency Testing



POST LINK ->	
http://atodorov.org/blog/2015/12/02/automatic-upstream-dependency-testing/




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Infrastructure Status: All systems go



POST LINK ->	
http://status.fedoraproject.org/




---------------------------------------------------------


AUTHOR & TITLE ->	
Justin W. Flory: Netflix and Linux: The First 60 Seconds



POST LINK ->	
http://blog.justinwflory.com/2015/12/netflix-and-linux-the-first-60-seconds/




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Infrastructure Status: There are scheduled downtimes in progress



POST LINK ->	
http://status.fedoraproject.org/




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Community Blog: Mumble ready for testing



POST LINK ->	
https://communityblog.fedoraproject.org/mumble-ready-for-testing/




---------------------------------------------------------


AUTHOR & TITLE ->	
Karel Zak: lsns(8) new command to list Linux namespaces



POST LINK ->	
http://karelzak.blogspot.com/2015/12/lsns8-new-command-to-list-linux.html




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Community Blog: FAmSCo Elections: Interview with Gabriele Trombini (mailga)



POST LINK ->	
https://communityblog.fedoraproject.org/famsco-elections-interview-with-gabriele-trombini-mailga/




---------------------------------------------------------


AUTHOR & TITLE ->	
Alexander Todorov: Hosting Multiple Python WSGI Scripts on OpenShift



POST LINK ->	
http://atodorov.org/blog/2015/12/01/hosting-multiple-python-wsgi-scripts-on-openshift/




---------------------------------------------------------


AUTHOR & TITLE ->	
Alexander Todorov: Commit a file with the GitHub API and Python



POST LINK ->	
http://atodorov.org/blog/2015/12/01/commit-a-file-with-the-github-api-and-python/




---------------------------------------------------------


AUTHOR & TITLE ->	
Perl SIG: podlators-4.00 in Rawhide



POST LINK ->	
http://blog-ciah.rhcloud.com/#i3c32303135313230313039303833392e47413231363540646863702d302d3134362e6272712e7265646861742e636f6d3e




---------------------------------------------------------


AUTHOR & TITLE ->	
Luya Tshimbalanga: Trying Talky.io



POST LINK ->	
http://feedproxy.google.com/~r/TheFinalZoneProject/~3/rDsfLIi66UE/trying-talkyio.html




---------------------------------------------------------


AUTHOR & TITLE ->	
Carlos Morel-Riquelme: Virtualbox on Fedora



POST LINK ->	
http://asleqia.tumblr.com/post/134306064190




---------------------------------------------------------


AUTHOR & TITLE ->	
Giannis Konstantinidis: How Is Fossaegean Doing?



POST LINK ->	
http://konstantinidis.cc/2015/12/01/how-is-fossaegean-doing/




---------------------------------------------------------


AUTHOR & TITLE ->	
Carlos Morel-Riquelme: Virtualbox en Fedora 23



POST LINK ->	
http://asleqia.tumblr.com/post/134304446265




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Infrastructure Status: All systems go



POST LINK ->	
http://status.fedoraproject.org/




---------------------------------------------------------


AUTHOR & TITLE ->	
Laura Abbott: A look at the kernel bisection scripts



POST LINK ->	
http://www.labbott.name/blog/2015/11/30/a-look-at-the-kernel-bisection-scripts




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Infrastructure Status: There are scheduled downtimes in progress



POST LINK ->	
http://status.fedoraproject.org/




---------------------------------------------------------


AUTHOR & TITLE ->	
Josef Strzibny: DNS for your Vagrant needs: with Landrush, libvirt and dnsmasq



POST LINK ->	
http://nts.strzibny.name/dns-for-your-vagrant-needs-with-landrush-libvirt-and-dnsmasq/




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Community Blog: FESCo Elections: Interview with Adam Miller (maxamillion)



POST LINK ->	
https://communityblog.fedoraproject.org/fesco-elections-interview-adam-miller-maxamillion/




---------------------------------------------------------


AUTHOR & TITLE ->	
Jonathan Dieter: Freeswitch vs. Asterisk?



POST LINK ->	
https://cedarandthistle.wordpress.com/2015/11/30/freeswitch-vs-asterisk/




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Community Blog: FESCo Elections: Interview with Justin Forbes (jforbes)



POST LINK ->	
https://communityblog.fedoraproject.org/fesco-elections-interview-justin-forbes/




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Community Blog: FAmSCo Elections: Interview with Ben Williams (Southern_Gentlem / kk4ewt)



POST LINK ->	
https://communityblog.fedoraproject.org/famsco-elections-interview-ben-williams/




---------------------------------------------------------


AUTHOR & TITLE ->	
Carlos Morel-Riquelme: Install SimpleScreenRecorder in Fedora



POST LINK ->	
http://asleqia.tumblr.com/post/134272313570




---------------------------------------------------------


AUTHOR & TITLE ->	
Carlos Morel-Riquelme: Instala Simplescreenrecorder en Fedora



POST LINK ->	
http://asleqia.tumblr.com/post/134272143390




---------------------------------------------------------


AUTHOR & TITLE ->	
Josh Bressers: Where is the physical trust boundary?



POST LINK ->	
http://sobersecurity.blogspot.com/2015/11/where-is-physical-trust-boundary.html




---------------------------------------------------------


AUTHOR & TITLE ->	
Ben Cotton: I support Software Freedom Conservancy



POST LINK ->	
https://funnelfiasco.com/blog/?p=1888




---------------------------------------------------------


AUTHOR & TITLE ->	
Vojtech Trefny: Blivet-gui 1.0 in Fedora 23



POST LINK ->	
http://blog.vojtechtrefny.cz/blivet-gui-10-fedora-23




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Magazine: Creating a laser light show with Fedora



POST LINK ->	
https://fedoramagazine.org/creating-laser-light-show-with-fedora/




---------------------------------------------------------


AUTHOR & TITLE ->	
Justin W. Flory: Gotta Badge ‘Em All: Telegraphist



POST LINK ->	
http://blog.justinwflory.com/2015/11/gotta-badge-em-all-telegraphist/




---------------------------------------------------------


AUTHOR & TITLE ->	
Emmanuel Seyman: Support Software Freedom Conservancy



POST LINK ->	
http://blog.fedora-fr.org/eseyman/post/Support-Software-Freedom-Conservancy




---------------------------------------------------------


AUTHOR & TITLE ->	
Matthew Garrett: What is hacker culture?



POST LINK ->	
http://mjg59.dreamwidth.org/38746.html




---------------------------------------------------------


AUTHOR & TITLE ->	
Mark J. Wielaard: Software Freedom Conservancy



POST LINK ->	
https://gnu.wildebeest.org/blog/mjw/2015/11/29/software-freedom-conservancy/




---------------------------------------------------------


AUTHOR & TITLE ->	
Alexander Todorov: Inspecting Method Arguments in Python



POST LINK ->	
http://atodorov.org/blog/2015/11/29/inspecting-method-arguments-in-python/




---------------------------------------------------------


AUTHOR & TITLE ->	
Helio Chissini de Castro: Qt testing packages for Fedora and Epel on copr



POST LINK ->	
http://www.heliocastro.info/?p=227




---------------------------------------------------------


AUTHOR & TITLE ->	
Luc de Louw: Setting up IPA with a specific CA cert subject



POST LINK ->	
http://blog.delouw.ch/2015/11/29/setting-up-ipa-with-a-specific-ca-cert-subject/




---------------------------------------------------------


AUTHOR & TITLE ->	
Remi Collet: QElectroTech version 0.5



POST LINK ->	
http://blog.remirepo.net/post/2015/11/29/QElectroTech-version-0.5-en




---------------------------------------------------------


AUTHOR & TITLE ->	
Daniel Pocock: Disabling Dynamic Currency Conversion (DCC) in Airbnb



POST LINK ->	
http://danielpocock.com/disabling-dcc-on-airbnb




---------------------------------------------------------


AUTHOR & TITLE ->	
Major Hayden: Custom keyboard shortcuts for Evolution in GNOME



POST LINK ->	
https://major.io/2015/11/27/custom-keyboard-shortcuts-for-evolution-in-gnome/




---------------------------------------------------------


AUTHOR & TITLE ->	
Debarshi Ray: The goats have strayed into GNOME



POST LINK ->	
https://debarshiray.wordpress.com/2015/11/27/the-goats-have-strayed-into-gnome/




---------------------------------------------------------


AUTHOR & TITLE ->	
Niels de Vos: Hurry up, only a few days left to do the 2015 Gluster Community Survey



POST LINK ->	
http://blog.nixpanic.net/2015/11/hurry-up-only-few-days-left-to-do-2015.html




---------------------------------------------------------


AUTHOR & TITLE ->	
Remi Collet: Forum PHP in Paris 2015



POST LINK ->	
http://blog.remirepo.net/post/2015/11/27/Forum-PHP-in-Paris-2015




---------------------------------------------------------


AUTHOR & TITLE ->	
Fabian Deutsch: All namespaces currently used



POST LINK ->	
http://dummdida.tumblr.com/post/134055778555




---------------------------------------------------------


AUTHOR & TITLE ->	
Christian Jantz: Configure Fedora 23 firewalld to allow nfs (Vagrant)



POST LINK ->	
http://jantz.cc/configure-fedora-23-firewalld-to-allow-nfs-vagrant/802/




---------------------------------------------------------


AUTHOR & TITLE ->	
Chris Brown: More on Satellite 6.1 provisioning



POST LINK ->	
https://chruz.wordpress.com/2015/11/27/more-on-satellite-6-1-provisioning/




---------------------------------------------------------


AUTHOR & TITLE ->	
Remi Collet: PHP version 5.6.16



POST LINK ->	
http://blog.remirepo.net/post/2015/11/27/PHP-version-5.6.16-en




---------------------------------------------------------


AUTHOR & TITLE ->	
Fedora Community Blog: FESCo Elections: Interview with Germano Massullo (Caterpillar / germano)



POST LINK ->	
https://communityblog.fedoraproject.org/fesco-elections-interview-germano-massullo-caterpillar-germano/




---------------------------------------------------------

		***LIST OF BLOGS***		


POST 1 ->
Post For Andrea Veri: Three years and counting



                    
                        

                                
                                Andrea Veri

                                (averi)
                        

                        Three years and counting
                    

                    

                        It’s been a while since my last “what’s been happening behind the scenes” e-mail so I’m here to report on what has been happening within the GNOME Infrastructure, its future plans and my personal sensations about a challenge that started around three (3) years ago when Sriram Ramkrishna and Jeff Schroeder proposed my name as a possible candidate for coordinating the team that runs the systems behind the GNOME Project. All this followed by the official hiring achieved by Karen Sandler back in February 2013.
The GNOME Infrastructure has finally reached stability both in terms of reliability and uptime, we didn’t have any service disruption this and the past year and services have been running smoothly as they were expected to in a project like the one we are managing.
As many of you know service disruptions and a total lack of maintenance were very common before I joined back in 2013, I’m so glad the situation has dramatically changed and developers, users, passionates are now able to reach our websites, code repositories, build machines without experiencing slowness, downtimes or
unreachability. Additionally all these groups of people now have a reference point they can contact in case they need help when coping with the infrastructure they daily use. The ticketing system allows users to get in touch with the members of the Sysadmin Team and receive support right away within a very short period of time (Also thanks to Pagerduty, service the Foundation is kindly sponsoring)
Before moving ahead to the future plans I’d like to provide you a summary of what has been done during these roughly three years so you can get an idea of why I define the changes that happened to the infrastructure a complete revamp:

Recycled several ancient machines migrating services off of them while consolidating them by placing all their configuration on our central configuration management platform ran by Puppet. This includes a grand total of 7 machines that were replaced by new hardware and extended warranties the Foundation kindly sponsored.
We strenghten our websites security by introducing SSL certificates everywhere and recently replacing them with SHA2 certificates.
We introduced several services such as Owncloud, the Commits Bot, the Pastebin, the Etherpad, Jabber, the GNOME Github mirror.
We restructured the way we backup our machines also thanks to the Fedora Project sponsoring the disk space on their backup facility. The way we were used to handle backups drastically changed from early years where a magnetic tape facility was in charge of all the burden of archiving our data to today where a NetApp is used together with rdiff-backup.
We upgraded Bugzilla to the latest release, a huge thanks goes to Krzesimir Nowak who kindly helped us building the migration tools.
We introduced the GNOME Apprentice program open-sourcing our internal Puppet repository and cleansing it (shallow clones FTW!) from any sensitive information which now lives on a different repository with restricted access.
We retired Mango and our OpenLDAP instance in favor of FreeIPA which allows users to modify their account information on their own without waiting for the Accounts Team to process the change.
We documented how our internal tools are customized to play together making it easy for future Sysadmin Team members to learn how the infrastructure works and supersede existing members in case they aren’t able to keep up their position anymore.
We started providing hosting to the GIMP and GTK projects which now completely rely on the GNOME Infrastructure. (DNS, email, websites and other services infrastructure hosting)
We started providing hosting not only to the GIMP and GTK projects but to localized communities as well such as GNOME Hispano and GNOME Greece
We configured proper monitoring for all the hosted services thanks to Nagios and Check-MK
We migrated the IRC network to a newer ircd with proper IRC services (Nickserv, Chanserv) in place.
We made sure each machine had a configured management (mgmt) and KVM interface for direct remote access to the bare metal machine itself, its hardware status and all the operations related to it. (hard reset, reboot, shutdown etc.)
We upgraded MoinMoin to the latest release and made a substantial cleanup of old accounts, pages marked as spam and trashed pages.
We deployed DNSSEC for several domains we manage including gnome.org, guadec.es, gnomehispano.es, guadec.org, gtk.org and gimp.org
We introduced an account de-activation policy which comes into play when a contributor not committing to any of the hosted repositories at git.gnome.org since two years is caught by the script. The account in question is marked as inactive and the gnomecvs (from the old cvs days) and ftpadmin groups are removed.
We planned mass reboots of all the machines roughly every month for properly applying security and kernel updates.
We introduced Mirrorbrain (MB), the mirroring service serving GNOME and related modules tarballs and software all over the world. Before introducing MB GNOME had several mirrors located in all the main continents and at the same time a very low amount of users making good use of them. Many organizations and companies behind these mirrors decided to not host GNOME sources anymore as the statistics of usage were very poor and preferred providing the same service to projects that really had a demand for these resources. MB solved all this allowing a proper redirect to the closest mirror (through mod_geoip) and making sure the sources checksum matched across all the mirrors and against the original tarball uploaded by a GNOME maintainer and hosted at master.gnome.org.

I can keep the list going for dozens of other accomplished tasks but I’m sure many of you are now more interested in what the future plans actually are in terms of where the GNOME Infrastructure should be in the next couple of years.
One of the main topics we’ve been discussing will be migrating our Git infrastructure away from cgit (which is mainly serving as a code browsing tool) to a more complete platform that is surely going to include a code review tool of some sort. (Gerrit, Gitlab, Phabricator)
Another topic would be migrating our mailing lists to Mailman 3 / Hyperkitty. This also means we definitely need a staging infrastructure in place for testing these kind of transitions ideally bound to a separate Puppet / Ansible repository or branch. Having a different repository for testing purposes will also mean helping apprentices to test their changes directly on a live system and not on their personal computer which might be running a different OS / set of tools than the ones we run on the GNOME Infrastructure.
What I also aim would be seeing GNOME Accounts being the only authentication resource in use within the whole GNOME Infrastructure. That means one should be able to login to a specific service with the same username / password in use on the other hosted services. That’s been on my todo list for a while already and it’s probably time to push it forward together with Patrick Puiterwijk, responsible of Ipsilon‘s development at Red Hat and GNOME Sysadmin.
While these are the top priority items we are soon receiving new hardware (plus extended warranty renewals for two out of the three machines that had their warranty renewed a while back) and migrating some of the VMs off from the current set of machines to the new boxes is definitely another task I’d be willing to look at in the next couple of months (one machine (ns-master.gnome.org) is being decommissioned giving me a chance to migrate away from BIND into NSD).
The GNOME Infrastructure is evolving and it’s crucial to have someone maintaining it. On this side I’m bringing to your attention the fact the assigned Sysadmin funds are running out as reported on the Board minutes from the 27th of October. On this side Jeff Fortin started looking for possible sponsors and
came up with the idea of making a brochure with a set of accomplished tasks that couldn’t have been possible without the Sysadmin fundraising campaign launched by Stormy Peters back in June 2010 being a success. The Board is well aware of the importance of having someone looking at the infrastructure that runs the GNOME Project and is making sure the brochure will be properly reviewed and published.
And now some stats taken from the Puppet Git Repository:$ cd /git/GNOME/puppet && git shortlog -ns

3520 Andrea Veri
506 Olav Vitters
338 Owen W. Taylor
239 Patrick Uiterwijk
112 Jeff Schroeder
71 Christer Edwards
4 Daniel Mustieles
4 Matanya Moses
3 Tobias Mueller
2 John Carr
2 Ray Wang
1 Daniel Mustieles García
1 Peter Baumgartenand from the Request Tracker database (52388 being my assigned ID):mysql> select count(*) from Tickets where LastUpdatedBy = '52388';
+----------+
| count(*) |
+----------+
| 3613 |
+----------+
1 row in set (0.01 sec)

mysql> select count(*) from Tickets where LastUpdatedBy = '52388' and Status = 'Resolved';
+----------+
| count(*) |
+----------+
| 1596 |
+----------+
1 row in set (0.03 sec)It’s been a long run which made me proud, for the things I learnt, for the tasks I’ve been able to accomplish, for the great support the GNOME community gave me all the time and most of all for the same fact of being part of the team responsible of the systems hosting the GNOME Project. Thank you GNOME community for your continued and never ending backing, we daily work to improve how the services we host are delivered to you and the support we receive back is fundamental for our passion and enthusiasm to remain high!
 

                    
                    
                    December 02, 2015 04:32 PM
                    
                

--------------------------------------------------------------------------
POST 2 ->
Post For Daniel Pocock: Is giving money to Conservancy the best course of action?



                    
                        

                                
                                Daniel Pocock

                                (pocock)
                        

                        Is giving money to Conservancy the best course of action?
                    

                    

                        There has been a lot of noise lately about Software Freedom Conservancy's fundraiser.
Various questions come to my mind:
Is this the only way to achieve goals such as defending copyright?  (There are other options, like corporate legal insurance policies)
When all the options are compared, is Conservancy the best one?  Maybe it is, but it would be great to confirm why we reached that conclusion.
Could it be necessary to choose two or more options that complement each other? Conservancy may just be one part of the solution and we may get a far better outcome if money is divided between Conservancy and insurance and something else.
What about all the other expenses that developers incur while producing free software?  Many other professionals, like doctors, do work that is just as valuable for society but they are not made to feel guilty about asking for payment and reimbursement. (In fact, for doctors, there is no shortage of it from the drug companies).
There seems to be an awkwardness about dealing with money in the free software world and it means many projects continue to go from one crisis to the next.  Just yesterday on another mailing list there was discussion about speakers regularly asking for reimbursement to attend conferences and at least one strongly worded email appeared questioning whether people asking about money are sufficiently enthusiastic about free software or if they are only offering to speak in the hope their trip will be paid.
The DebConf team experienced one of the more disappointing examples of a budget communication issue when developers who had already volunteered long hours to prepare for the event then had to give up valuable time during the conference to wash the dishes for 300 people.  Had the team simply insisted that the high cost of local labor was known when the country was selected then the task could have been easily outsourced to local staff.  This came about because some members of the community felt nervous about asking for budget and other people couldn't commit to spend.
Rather than stomping on developers who ask about money or anticipate the need for it in advance, I believe we need to ask people if money was not taboo, what is the effort they could contribute to the free software world and how much would they need to spend in a year for all the expenses that involved.  After all, isn't that similar to the appeal from Conservancy's directors?  If all developers and contributors were suitably funded, then many people would budget for contributions to Conservancy, other insurances, attending more events and a range of other expenses that would make the free software world operate more smoothly.
In contrast, the situation we have now is that developers funding themselves or with tightly constrained budgets or grants often have to spend hours picking through AirBNB and airline web sites trying to get the best deal while those few developers who do have more flexible corporate charge cards just pick a convenient hotel and don't lose any time reading through the fine print to see if there are charges for wifi, breakfast, parking, hidden taxes and all the other gotchas because all of that will be covered for them.
With developer budgets/wishlists documented, where will the money come from?  Maybe it won't appear, maybe it will.  But if we don't ask for it at all, we are much less likely to get anything.  Mozilla has recently suggested that developers need more cash and offered to put $1 million on the table to fix the problem, is it possible other companies may see the benefit of this and put up some cash too?
The time it takes to promote one large budget and gather donations is probably far more efficient than the energy lost firefighting lots of little crisis situations.
Being more confident about money can also do a lot more to help engage people and make their participation sustainable in the long term.  For example, if a younger developer is trying to save the equivalent of two years of their salary to pay a deposit on a house purchase, how will they feel about giving money to Conservancy or pay their own travel expenses to a free software event?  Are their families and other people they respect telling them to spend or to save and if our message is not compatible with that, is it harder for us to connect with these people?
One other thing to keep in mind is that budgeting needs to include the costs of those who may help the fund-raising and administration of money.  If existing members of our projects are not excited about doing such work we have to be willing to break from the "wait for a volunteer or do-it-yourself" attitude.  There are so many chores that we are far more capable of doing as developers that we still don't have time for, we are only fooling ourselves if we anticipate that effective fund-raising will take place without some incentives going back to those who do the work.


                    
                    
                    December 02, 2015 03:40 PM
                    
                

--------------------------------------------------------------------------
POST 3 ->
Post For Richard Hughes: OpenHardware and code signing (update)



                    
                        

                                
                                Richard Hughes

                                (rhughes)
                        

                        OpenHardware and code signing (update)
                    

                    

                        I posted a few weeks ago about the difficulty of providing device-side verification of firmware updates, at the same time remaining OpenHardware and thus easily hackable. The general consensus was that allowing anyone to write any kind of firmware to the device without additional authentication was probably a bad idea, even for OpenHardware devices. I think I’ve come up with an acceptable compromise I can write up as a recommendation, as per usual using the ColorHug+ as an example. For some background, I’ve sold nearly 3,000 original ColorHug devices, and in the last 4 years just three people wanted help writing custom firmware, so I hope you can see the need to protect the majority is so much larger than making the power users happy.
ColorHug+ will be supplied with a bootloader that accepts only firmware encrypted with the secret XTEA key I that I’m using for my devices. XTEA is an acceptable compromise between something as secure as ECC, but that’s actually acceptable in speed and memory usage for a 8-bit microcontroller running at 6MHz with 8k of ROM. Flashing a DIY or modified firmware isn’t possible, and by the same logic flashing a malicious firmware will also not work.
To unlock the device (and so it stays OpenHardware) you just have to remove the two screws, and use a paper-clip to connect TP5 and GND while the device is being plugged into the USB port. Both lights will come on, and stay on for 5 seconds and then the code protection is turned off. This means you can now flash any home-made or malicious firmware to the device as you please.
There are downsides to unlocking; you can’t re-lock the hardware so it supports official updates again. I don’t know if this is a huge problem; flashing home-made firmware could damage the device (e.g. changing the pin mapping from input to output and causing something to get hot). If this is a huge problem I can fix CH+ to allow re-locking and fix up the guidelines, although I’m erring on unlocking being a one way operation.
Comments welcome.

                    
                    
                    December 02, 2015 02:47 PM
                    
                

--------------------------------------------------------------------------
POST 4 ->
Post For Fedora Community Blog: FAmSCo Elections: Interview with Dan Mossor (danofsatx)



                    
                        

                                
                                Fedora Community Blog

                                (admin)
                        

                        FAmSCo Elections: Interview with Dan Mossor (danofsatx)
                    

                    

                        Fedora Ambassador Steering Committee badge
This is a part of the FAmSCo Elections Interviews series. Voting is open to all Fedora contributors. The voting period starts on Tuesday, December 08 and closes promptly at 23:59:59 UTC on Monday, December 14th. Please read the responses from candidates and make your choices carefully. Feel free to ask questions to the candidates here (preferred) or elsewhere!
Interview with Dan Mossor

Fedora Account: dmossor
IRC: danofsatx (usually in #fedora-qa, #fedora-server, #fedora-kde, #fedora-ambassadors, #fedora-commops, #fedora, #cockpit, #firewalld, #freeipa)
Fedora User Wiki Page

What is your background in Fedora? What have you worked on and what are you doing now?
I have experience with Fedora as far back as Fedora Core 1, occasionally coming back throughout the years to just what was new. I was primarily a Red Hat Linux, then CentOS user until Fedora 14 when I installed it on a workstation in my home network. I first became a contributor to the Fedora Project in late 2013 when searching for an open source community to join. I looked into other communities, but found Fedora to be the most welcoming. Since I am not a developer or an artist, my contributions are limited to what I can do – Adam Williamson encouraged me to fire up an IRC client for the first time in nearly 20 years and join the #fedora-qa channel, and I have been here ever since. Since that time, I have also joined the KDE Working Group, the Server Working Group, and was an Infrastructure Apprentice for a while before I had to give that up due to lack of time. I became an Ambassador this past summer with the intent of representing Fedora at Texas Linux Fest which went as well as we could expect, and I promote Fedora heavily on my university campus within our Computer Information Systems department.
What are the most pressing issues facing Fedora today? What should we do about them?
One of the most prevalent issues I see is the intense promotion of one certain technology seeming to relegate alternatives to the “also ran” category – case in point, the Plasma desktop for Fedora 23 gets less (press) coverage than the Cinnamon desktop, but Plasma is a blocking desktop. Fedora is also deeply invested in Docker and Atomic – while both of these show great promise, there are other competing technologies that deserve to be considered, and not practically excluded from the project.
As for what we should do about them, if there is an active community within the Fedora Project for a certain technology, more Fedora Project resources need to be allocated to it. Otherwise, we face the real possibility of that community falling apart and leaving the Project due to a perceived “lack of support” from Fedora.
What are the most pressing issues facing the Fedora Ambassadors today? What should we do about them?
The Fedora Ambassadors seem to be out of the loop when it comes to events, project activities, or changes within the products unless it lies specifically within their area of interest. One way to fix this is through a central communications portal where items of interest can be tagged as such for Ambassadors. For instance, Ambassadors could subscribe to an RSS feed from this blog and the Fedora Magazine for everything tagged with “Ambassador” and be kept abreast of changes and events. It would fall to the poster or an admin to set the tag when appropriate, however, which may require a team to watch and administer this.
Another issue facing the Ambassadors is the budget process. My limited experience with it so far has shown it to be unwieldy and cumbersome to both request monies for an event and to file for reimbursement. I realize there is work underway to fix the budget process, but reimbursements needs to have a long, hard look and some research and analysis done on a more modern take on this process.
Interest in traditional Linux events seem to be stagnating or even declining. How should the Ambassadors respond to this change?
As Ambassadors, it is incumbent upon us to promote Fedora, and open source, not only at official events, but in our daily lives.  Many of us are active within a university environment – let us use those environments to spark the flame of curiosity through local campus events. We should have a presence at local MeetUp groups and local tech events that don’t require a full Ambassador complement, just one or two people with a table, some DVDs, and some print media. We, as Fedora Ambassadors, don’t have the ability to promote true Linux events at scale, but we can consistently promote Fedora in our every-day activities, and through this drive interest towards the Linux events.
What are your future plans? Is there anything you can consider a “Mission Statement” in this role?
My future plans are to develop the required skill set to become a contributor to the code. My goal is to gain employment with a company that produces or supports open source software. A mission statement would be, “To be an active, full-time contributor to open source software through the development and testing of software, and maintaining the  stability of systems.”
What is your take on the recent governance reorganization (Council, working groups, budget, etc.)?
The recent reorganization was simply a change in the way we do business, but it was a needed change. The previous incarnation hadn’t changed much since Fedora was created out of Red Hat Linux. This new organization truly shows that it is a modern organization that is settling in for the long haul. The changes unearthed some issues within the community (i.e. budget) that will be solved, and added clarity to other functions (i.e. Council).
It seems the Ambassador activities are disconnected from the rest of the project. What is your way of fixing the issue?
As mentioned above – this is something I consider to be a pressing issue for Ambassadors. Simply put, we need input from the subprojects. As a member of the QA, Server and KDE projects, I hope to be able to communicate the changes from within those realms. I depend on others within Workstation, Cloud, Marketing, Docs, Admin, and Development to communicate major changes to the Ambassadors so we can incorporate this into our sphere of knowledge and be more suited to communicating these changes to the public.
Which kind of information should be exchanged between Ambassadors and the other Project groups?
Changes. New technologies. New solutions. New directions. New frameworks. The Ambassadors need to be able to not only explain that Fedora 23 ships with GNOME 3.18, but what new features are buried in GNOME 3.18? What is different under the hood, and how does that influence daily workflow?  For example, how many Ambassadors knew that F23 shipped with unbound as the DNS resolver? How many knew how that would affect local resolution? How many knew how to communicate this, and how to mitigate any problems it would introduce?
There is a plethora of things like this in every release. The Ambassadors need to be educated on these changes and what the impact and/or workarounds are, if any.
Are Ambassadors really up to date about new features of the releases? If not, what are you planning to do to keep them up to date?
That depends on what other subprojects the Ambassador belongs to, and how well Marketing publicized certain features. Like I mentioned above, I don’t recall unbound being mentioned in the release notes (as an example). The easy solution here is for a summary to be written up based on the FESCo “Approved Changes” for the release, and updates to the Ambassadors published/presented throughout the release cycle.
The post FAmSCo Elections: Interview with Dan Mossor (danofsatx) appeared first on Fedora Community Blog.

                    
                    
                    December 02, 2015 11:00 AM
                    
                

--------------------------------------------------------------------------
POST 5 ->
Post For Alexander Todorov: Automatic Upstream Dependency Testing



                    
                        

                                
                                Alexander Todorov

                                (atodorov)
                        

                        Automatic Upstream Dependency Testing
                    

                    

                        Ever since
RHEL 7.2 python-libs broke s3cmd
I've been pondering an age old problem: How do I know if my software works with the
latest upstream dependencies ? How can I pro-actively monitor for new versions
and add them to my test matrix ?
Mixing together my previous experience with
Difio
and monitoring upstream sources,
and Forbes Lindesay's GitHub Automation talk
at DEVit Conf I came
together with a plan:

Make an application which will execute when new upstream version is available;
Automatically update .travis.yml
for the projects I'm interested in;
Let Travis-CI execute my test suite for all available upstream versions;
Profit!

How Does It Work
First we need to monitor upstream! RubyGems.org has nice
webhooks interface,
you can even trigger on individual packages. PyPI however doesn't have anything
like this :(. My solution is to run a cron job every hour and parse their RSS
stream for newly released packages. This has been working previously for Difio
so I re-used one function from the code.
After finding anything we're interested in comes the hard part - automatically
updating .travis.yml using the GitHub API. I've described this in more detail
here. This time
I've slightly modified the code to update only when needed and accept more
parameters so it can be reused.
Travis-CI has a clean interface to specify environment variables and
defining several
of them crates a test matrix. This is exactly what I'm doing.
.travis.yml is updated with a new ENV setting, which determines the upstream
package version. After commit new build is triggered which includes the expanded
test matrix.
Example

Imagine that our Project 2501 depends on FOO version 0.3.1. The
build log illustrates what
happened:

Build #9 is what we've tested with FOO-0.3.1 and released to production.
Test result is PASS!
Build #10 - meanwhile upstream releases FOO-0.3.2 which causes our project
to break. We're not aware of this and continue developing new features
while all test results still PASS! When our customers upgrade their systems
Project 2501 will break ! Tests didn't catch it because test matrix wasn't
updated. Please
ignore the actual commit message in the example! I've used the same repository
for the dummy dependency package.
Build #11 - the monitoring solution finds FOO-0.3.2 and updates the test
matrix automatically. The build immediately breaks! More precisely the
test with version 0.3.2 fails!
Build #12 - we've alerted FOO.org about their problem and they've released
FOO-0.3.3. Our monitor has found that and updated the test matrix.
However the 0.3.2 test job still fails!
Build #13 - we decide to workaround the 0.3.2 failure or simply handle the
error gracefully. In this example I've removed version 0.3.2 from the test
matrix to simulate that. In reality I wouldn't touch .travis.yml but instead
update my application and tests to check for that particular version.
All test results are PASS again!

Btw Build #11 above was triggered manually (./monitor.py) while Build #12
came from OpenShit, my hosting environment.
At present I have this monitoring enabled for my
new Markdown extensions
and will also add it to django-s3-cache
once it migrates to Travis-CI (it uses drone.io now).
Enough Talk, Show me the Code
monitor.py#!/usr/bin/env python

import os
import sys
import json
import base64
import httplib
from pprint import pprint
from datetime import datetime
from xml.dom.minidom import parseString

def get_url(url, post_data = None):
    # GitHub requires a valid UA string
    headers = {
        'User-Agent' : 'Mozilla/5.0 (X11; Linux x86_64; rv:10.0.5) Gecko/20120601 Firefox/10.0.5',
    }

    # shortcut for GitHub API calls
    if url.find("://") == -1:
        url = "https://api.github.com%s" % url

    if url.find('api.github.com') > -1:
        if not os.environ.has_key("GITHUB_TOKEN"):
            raise Exception("Set the GITHUB_TOKEN variable")
        else:
            headers.update({
                'Authorization': 'token %s' % os.environ['GITHUB_TOKEN']
            })

    (proto, host_path) = url.split('//')
    (host_port, path) = host_path.split('/', 1)
    path = '/' + path

    if url.startswith('https'):
        conn = httplib.HTTPSConnection(host_port)
    else:
        conn = httplib.HTTPConnection(host_port)


    method = 'GET'
    if post_data:
        method = 'POST'
        post_data = json.dumps(post_data)

    conn.request(method, path, body=post_data, headers=headers)
    response = conn.getresponse()

    if (response.status == 404):
        raise Exception("404 - %s not found" % url)

    result = response.read().decode('UTF-8', 'replace')
    try:
        return json.loads(result)
    except ValueError:
        # not a JSON response
        return result

def post_url(url, data):
    return get_url(url, data)


def monitor_rss(config):
    """
        Scan the PyPI RSS feeds to look for new packages.
        If name is found in config then execute the specified callback.

        @config is a dict with keys matching package names and values
        are lists of dicts
            {
                'cb' : a_callback,
                'args' : dict
            }
    """
    rss = get_url("https://pypi.python.org/pypi?:action=rss")
    dom = parseString(rss)
    for item in dom.getElementsByTagName("item"):
        try:
            title = item.getElementsByTagName("title")[0]
            pub_date = item.getElementsByTagName("pubDate")[0]

            (name, version) = title.firstChild.wholeText.split(" ")
            released_on = datetime.strptime(pub_date.firstChild.wholeText, '%d %b %Y %H:%M:%S GMT')

            if name in config.keys():
                print name, version, "found in config"
                for cfg in config[name]:
                    try:
                        args = cfg['args']
                        args.update({
                            'name' : name,
                            'version' : version,
                            'released_on' : released_on
                        })

                        # execute the call back
                        cfg['cb'](**args)
                    except Exception, e:
                        print e
                        continue
        except Exception, e:
            print e
            continue

def update_travis(data, new_version):
    travis = data.rstrip()
    new_ver_line = "  - VERSION=%s" % new_version
    if travis.find(new_ver_line) == -1:
        travis += "\n" + new_ver_line + "\n"
    return travis


def update_github(**kwargs):
    """
        Update GitHub via API
    """
    GITHUB_REPO = kwargs.get('GITHUB_REPO')
    GITHUB_BRANCH = kwargs.get('GITHUB_BRANCH')
    GITHUB_FILE = kwargs.get('GITHUB_FILE')

    # step 1: Get a reference to HEAD
    data = get_url("/repos/%s/git/refs/heads/%s" % (GITHUB_REPO, GITHUB_BRANCH))
    HEAD = {
        'sha' : data['object']['sha'],
        'url' : data['object']['url'],
    }

    # step 2: Grab the commit that HEAD points to
    data = get_url(HEAD['url'])
    # remove what we don't need for clarity
    for key in data.keys():
        if key not in ['sha', 'tree']:
            del data[key]
    HEAD['commit'] = data

    # step 4: Get a hold of the tree that the commit points to
    data = get_url(HEAD['commit']['tree']['url'])
    HEAD['tree'] = { 'sha' : data['sha'] }

    # intermediate step: get the latest content from GitHub and make an updated version
    for obj in data['tree']:
        if obj['path'] == GITHUB_FILE:
            data = get_url(obj['url']) # get the blob from the tree
            data = base64.b64decode(data['content'])
            break

    old_travis = data.rstrip()
    new_travis = update_travis(old_travis, kwargs.get('version'))

    # bail out if nothing changed
    if new_travis == old_travis:
        print "new == old, bailing out", kwargs
        return

    ####
    #### WARNING WRITE OPERATIONS BELOW
    ####

    # step 3: Post your new file to the server
    data = post_url(
                "/repos/%s/git/blobs" % GITHUB_REPO,
                {
                    'content' : new_travis,
                    'encoding' : 'utf-8'
                }
            )
    HEAD['UPDATE'] = { 'sha' : data['sha'] }

    # step 5: Create a tree containing your new file
    data = post_url(
                "/repos/%s/git/trees" % GITHUB_REPO,
                {
                    "base_tree": HEAD['tree']['sha'],
                    "tree": [{
                        "path": GITHUB_FILE,
                        "mode": "100644",
                        "type": "blob",
                        "sha": HEAD['UPDATE']['sha']
                    }]
                }
            )
    HEAD['UPDATE']['tree'] = { 'sha' : data['sha'] }

    # step 6: Create a new commit
    data = post_url(
                "/repos/%s/git/commits" % GITHUB_REPO,
                {
                    "message": "New upstream dependency found! Auto update .travis.yml",
                    "parents": [HEAD['commit']['sha']],
                    "tree": HEAD['UPDATE']['tree']['sha']
                }
            )
    HEAD['UPDATE']['commit'] = { 'sha' : data['sha'] }

    # step 7: Update HEAD, but don't force it!
    data = post_url(
                "/repos/%s/git/refs/heads/%s" % (GITHUB_REPO, GITHUB_BRANCH),
                {
                    "sha": HEAD['UPDATE']['commit']['sha']
                }
            )

    if data.has_key('object'): # PASS
        pass
    else: # FAIL
        print data['message']


if __name__ == "__main__":
    config = {
        "atodorov-test" : [
            {
                'cb' : update_github,
                'args': {
                    'GITHUB_REPO' : 'atodorov/bztest',
                    'GITHUB_BRANCH' : 'master',
                    'GITHUB_FILE' : '.travis.yml'
                }
            }
        ],
        "Markdown" : [
            {
                'cb' : update_github,
                'args': {
                    'GITHUB_REPO' : 'atodorov/Markdown-Bugzilla-Extension',
                    'GITHUB_BRANCH' : 'master',
                    'GITHUB_FILE' : '.travis.yml'
                }
            },
            {
                'cb' : update_github,
                'args': {
                    'GITHUB_REPO' :  'atodorov/Markdown-No-Lazy-Code-Extension',
                    'GITHUB_BRANCH' : 'master',
                    'GITHUB_FILE' : '.travis.yml'
                }
            },
            {
                'cb' : update_github,
                'args': {
                    'GITHUB_REPO' :  'atodorov/Markdown-No-Lazy-BlockQuote-Extension',
                    'GITHUB_BRANCH' : 'master',
                    'GITHUB_FILE' : '.travis.yml'
                }
            },
        ],
    }

    # check the RSS to see if we have something new
    monitor_rss(config)


                    
                    
                    December 02, 2015 08:34 AM
                    
                

--------------------------------------------------------------------------
POST 6 ->
Post For Fedora Infrastructure Status: All systems go



                    
                        

                                
                                Fedora Infrastructure Status

                                (admin)
                        

                        All systems go
                    

                    

                        New status good: Everything seems to be working. for services: Zodbot IRC bot, FedoraHosted.org Services, Mailing Lists

                    
                    
                    December 02, 2015 03:35 AM
                    
                

--------------------------------------------------------------------------
POST 7 ->
Post For Justin W. Flory: Netflix and Linux: The First 60 Seconds



                    
                        

                                
                                Justin W. Flory

                                (jflory7)
                        

                        Netflix and Linux: The First 60 Seconds
                    

                    

                        Netflix and Linux may not agree on the desktop, but they do in the cloud. Source: blockless.com
Netflix, Linux, and 60 seconds
While they have their differences on the desktop, there is one place where Netflix and Linux get along beautifully: the cloud. Netflix system administrator Brendan Gregg recently published an article on the Netflix blog about what their administrators do in the first 60 seconds when analyzing performance. You should give it a read!
The post Netflix and Linux: The First 60 Seconds appeared first on Justin W. Flory's Blog.

                    
                    
                    December 02, 2015 03:30 AM
                    
                

--------------------------------------------------------------------------
POST 8 ->
Post For Fedora Infrastructure Status: There are scheduled downtimes in progress



                    
                        

                                
                                Fedora Infrastructure Status

                                (admin)
                        

                        There are scheduled downtimes in progress
                    

                    

                        New status scheduled: Scheduled maintenance in progress for services: Zodbot IRC bot, Mailing Lists, FedoraHosted.org Services

                    
                    
                    December 02, 2015 03:01 AM
                    
                

--------------------------------------------------------------------------
POST 9 ->
Post For Fedora Community Blog: Mumble ready for testing



                    
                        

                                
                                Fedora Community Blog

                                (admin)
                        

                        Mumble ready for testing
                    

                    

                        Mumble is back
Mumble, a free and open-source VoIP program
The popular Voice Over IP (VoIP) program, Mumble, is being repackaged again for Fedora 22 and 23. Fedora contributor fedpop unretired the package from the Fedora Package Database and is working on getting it added to the stable repositories.
Mumble is available for testing for Fedora 22 and 23 users. Once enough positive feedback is received, it will be added back to the stable repositories for all users. Testers are welcome, especially for Fedora 22!
How to test Mumble
To test Mumble, open a command line and run the following command.
$ sudo dnf install mumble --enablerepo=updates-testing
Confirm the installation and the application will appear on your system. Give it a run and make sure everything works as expected! If it all checks out, leave feedback for the build in Bodhi so the package can move closer to being packaged for the stable repositories (links are below).
For help enabling the testing repository, see the QA Testing wiki article.
Find Mumble in Bodhi
Mumble, Fedora 22
Mumble, Fedora 23
The post Mumble ready for testing appeared first on Fedora Community Blog.

                    
                    
                    December 02, 2015 03:00 AM
                    
                

--------------------------------------------------------------------------
POST 10 ->
Post For Karel Zak: lsns(8) new command to list Linux namespaces



                    
                        

                                
                                Karel Zak

                                (kzak)
                        

                        lsns(8) new command to list Linux namespaces
                    

                    

                        The namespaces are commonly used way how to isolate global (ipc, mount, net, ...) resource instances. Unfortunately, we have no command line tool to list namespaces. The new command lsns(8) tries to fill this gap.  Examples:# lsns        NS TYPE  NPROCS   PID USER   COMMAND4026531836 pid      276     1 root   /usr/lib/systemd/systemd --system --deserialize 154026531837 user     276     1 root   /usr/lib/systemd/systemd --system --deserialize 154026531838 uts      276     1 root   /usr/lib/systemd/systemd --system --deserialize 154026531839 ipc      276     1 root   /usr/lib/systemd/systemd --system --deserialize 154026531840 mnt      269     1 root   /usr/lib/systemd/systemd --system --deserialize 154026531857 mnt        1    63 root   kdevtmpfs4026531963 net      275     1 root   /usr/lib/systemd/systemd --system --deserialize 154026532189 mnt        1   545 root   /usr/lib/systemd/systemd-udevd4026532390 net        1   776 rtkit  /usr/libexec/rtkit-daemon4026532478 mnt        1   776 rtkit  /usr/libexec/rtkit-daemon4026532486 mnt        1   847 colord /usr/libexec/colord4026532518 mnt        3  6500 root   -bash and list namespace content:# lsns 4026532518  PID  PPID USER COMMAND 6500  6372 root -bash19572  6500 root ??/usr/bin/mc -P /tmp/mc-root/mc.pwd.650019575 19572 root   ??bash -rcfile .bashrc help output with columns description:  # lsns -h  Usage: lsns [options] [namespace]  List system namespaces.  Options: -J, --json             use JSON output format -l, --list             use list format output -n, --noheadings       don't print headings -o, --output list      define which output columns to use -p, --task pid         print process namespaces -r, --raw              use the raw output format -u, --notruncate       don't truncate text in columns -t, --type name        namespace type (mnt, net, ipc, user, pid, uts)   -h, --help     display this help and exit -V, --version  output version information and exit  Available columns (for --output):          NS  namespace identifier (inode number)        TYPE  kind of namespace        PATH  path to the namespace      NPROCS  number of processes in the namespace         PID  lowers PID in the namespace        PPID  PPID of the PID     COMMAND  command line of the PID         UID  UID of the PID        USER  username of the PID  For more details see lsns(8). The important detail is that you can see only namespaces accessible from currently mounted /proc filesystem. The lsns(8) is not able to list persistent namespaces without processes where the namespace instance is hold by bind mounts of the /proc/[pid]/ns/[type] files and the output may be affected by unshared PID namespace and unshared /proc (see unshare(8) for more details). ... it will be probably available in util-linux v2.28 (~ January 2016).

                    
                    
                    December 01, 2015 04:19 PM
                    
                

--------------------------------------------------------------------------
POST 11 ->
Post For Fedora Community Blog: FAmSCo Elections: Interview with Gabriele Trombini (mailga)



                    
                        

                                
                                Fedora Community Blog

                                (admin)
                        

                        FAmSCo Elections: Interview with Gabriele Trombini (mailga)
                    

                    

                        Fedora Ambassador Steering Committee badge
This is a part of the FAmSCo Elections Interviews series. Voting is open to all Fedora contributors. The voting period starts on Tuesday, December 08 and closes promptly at 23:59:59 UTC on Monday, December 14th. Please read the responses from candidates and make your choices carefully. Feel free to ask questions to the candidates here (preferred) or elsewhere!
Interview with Gabriele Trombini

Fedora Account: mailga
IRC: mailga (mainly in #fedora-ambassadors, #fedora-commops, #fedora-docs, #fedora-join, #fedora-mktg, #fedora-websites)
Fedora User Wiki Page


What is your background in Fedora? What have you worked on and what are you doing now?
I started with Fedora locally as one of the main contributors of the Italian Community, it.fedoracommunity.com. I helped in the growth of its forum, website renewal,  and documentation; I also wrote a Fedora book for newbies with robyduck and produced the Italian pdf magazine “folio”.
Of course I’m part of the EMEA ambassadors, which was my first step into the Fedora Project. I attended many local events and the one I’m really proud of is the one we held in Milan with short talks by involved people. We showed the crew the main activities within the Project (Ambassadors, Design, L10n, Websites, Infra, Kernel and Virtualization).
Afterwards I spent more time with the international community. I attended a couple of EMEA FADs and Fosdem 2014, and I recently gave a talk at Flock 2015.
My interest range is across the entire Project (I’m avoiding development because even if I’m really interested in it, at the moment my spare time wouldn’t be enough). I’m part of the Marketing team (I performed some tasks for the F23 release), a member of the Fedora-Join SIG (renewed and able to give a help to the Ambassadors in the near future), a member of Websites (providing help with smaller works in support of the team), and lastly a new member of the Docs group (I’m putting in a home mail server and I want to share my experience even if, to be honest, this is going slowly, at the moment).
What are the most pressing issues facing Fedora today? What should we do about them?
Well, it isn’t easy to define the issues Fedora is facing.
We don’t have a real feel of what is going on outside. Yes, we can read posts, we can see people at events, we can have some metrics, but what is happening out of our border has several sources.
There are different kind of users, just like students, business and public administration.
Schools are the area which are going very well because a lot of our contributors are students (or keep contacts with schools and/or colleges) and usually educational establishments are willing to accept events or get involved in Fedora activities (the most important is that they have suitable spaces for hosting events). Our Ambassadors are doing a great job in this area.
Instead, it is harder to find a way of entrance for both private and public administration (even if lately public administration seems more flexible). Most of them are tied to other operating systems and we have to go to the top of management to try to open a door.
There are two kind of problems here:

People: We have lots of contributors having little (or none) management experience in their employment (mostly due to their age), so they can’t be part of the renewal IT programs inside their workplace.
Establishment: The problem here is the marketing is not structured to make campaigns targeted to private and public; this engages the Marketing team, and I, as part of the team, am thinking to go in that direction, studying strategies, analyzing metrics and dedicating time to get in touch with public and private areas.

Resolving point #2 makes easier the resolution of point #1; the Document Foundation is doing successful campaigns in this direction with LibreOffice, so why shouldn’t we as well?
What are the most pressing issues facing the Fedora Ambassadors today? What should we do about them?
This is somehow related to the previous point. At the moment, mostly at events, Fedora is well known for its software: always updated with the latest versions, but versus other distros, Fedora often is not the first choice and we are not able to go ahead. My opinion is that we don’t have any feedback from the users, so we really don’t know why people are going to other distros or operating systems.
We need feedback; seeing people at booth or conferences is not enough. We don’t communicate with them. Usually we answer a user’s questions, but often we don’t ask them what they think.
It’s really difficult being an Ambassador, especially when dozens of people come to our booth in order to only have a mug, a shirt, or some stickers. We should stop them and ask what they think about Fedora, take note of replies, and report them in the event list. Of course there are a lot of events we don’t attend directly, so we need help from local communities.
We have to create a database, or something similar, where stored answers could lead us to improve our effort and get them more focused.
Interest in traditional Linux events seem to be stagnating or even declining. How should the Ambassadors respond to this change?
True, that’s my opinion as well.
The increase in the use of the Internet makes knowledge and opinions more available; by now everyone gets information from the web and the Ambassadors activities should be based on the operating system inside itself.
To do that, the Ambassadors’ activity is to collect information from each group (at least WS, Server, Cloud and also Spins groups) in order to go deeper in the features hidden under the skin of the releases.
And yes, the Ambassadors should be prepared for the events, but not only target their talks or explanations on what is well-known by the web.
The tools are ready: there are talking points and channels for doing that, and overall, there is the Marketing team that should be more efficient to give the information they need.
There’s is also the possibility (as we are planning in the Fedora-Join SIG) to provide a contact with the Join group when requested (a PC with the IRC channel #fedora-join open is enough) where people can ask our contributors any information they need. We’re also planning to hold Ambassador Join-Days that current Ambassadors will be aware of.
At the least, the Ambassadors should have a way to be aware of things that other non-contributors would not be aware of because they can’t find it on the Internet yet. This is the way to make them really feel a part of the Project, and help be a part of the inside of Fedora.
What are your future plans? Is there anything what you can consider as “Mission Statement” in this role?
My plans as a FAmSCo member is to give to Ambassadors the tools for being persuasive in their activities. They’re are one of the most important parts of the Project (our business card) and my goal is having them always ready to get in touch with the public with information and tools.
Also FAmSCo have to uniform the ticketing system and budgeting rules for all the regions.
What is your take on the recent governance reorganization (Council, working groups, budget, etc.)?
Having more focused committees is the best way to operate; each sector is able to go deeper in their tasks to make things move ahead in a more accurate way. We should only be careful that each pool is working together; this kind of splitting, if not correctly managed, could cause dispersions and get the opposite effect.
It’s not a mystery that any working group is very active inside their tasks but often there’s a lack of information passed to others.
Usually each group waits for questions but we should reverse this way of acting.
The goal is that each working team gives information to the outside using some kind of tool (Ticketing system? Questionnaire?) based on a deadline, likewise to the tasks for the releases we are using. A wrangler checking this job is required.
It seems the Ambassador activities are disconnected from the rest of the project; what is your way for fixing the issue?
This should be fixed in the near future; FOSCo will incorporate members from other groups (as explained here) in order to get in touch with the main groups of the project and work together on tasks.
In the meanwhile FAmSCo (which is responsible for the transition to FOSCo) must activate preferential channels to other groups for getting news on software and many aspects of the project.
What kind of information should be exchanged between Ambassadors and the other Project groups?
The best is having Ambassadors briefing done by member of WG and marketing, but in the last releases it didn’t happen. This was left to the reading of the talking points or the release notes.
Ambassadors must be aware of:

Features
Future plans
Internal processes
Tools for handling info

The starting point, as said before, are the talking points and/or release notes, but we have to give the possibility to deepen things Ambassadors think users must be aware of. This can be done by now, but its real effect will happen with the FOSCo.
The second is on the shoulder of the Council. A brief communication (in the ML) where future directions are explained in few words should be enough.
The third is the more complicated IMHO; there are a lot of Ambassadors who still don’t know what the Project is asking them and how to get things done (swag, money requests, event listing, reporting and so on). This should be part of the mentors’ teaching. Mentors, with all the good things they’re doing, should also explain the correct form to get access to the internal process. Not an exam, but they have to explain how to do what/when/where.
The last bullet point is a CommOps task. One of the Ambassadors’ homework tasks is to take a peek at the tools available, aggregate data, draw reports and so on. CommOps (in its wiki page) provides several tools to get lots of information.
Are Ambassadors really up to date about new features of the releases? If not, what are you planning to do to keep them up to date?
Ambassadors are part of Marketing (also true the reverse) and they must have more points of contact with the Marketing team, who is aware of the new features and have channels to get in touch with developers and other groups. Ambassadors should have a preferential channel to communicate with Marketing and they must have a reply ASAP.
Of course Marketing is not able to satisfy this kind of request coming from lots of people, so FAmSCo should collect requests (on the Trac) and forward them to Marketing (IMHO once a week) on its ticketing system. Marketing will parse the tickets and answer directly.
Of course both Marketing and FAmSCo (waiting for FOSCo) will prepare a document where Ambassadors are informed about the features of the next releases.
The post FAmSCo Elections: Interview with Gabriele Trombini (mailga) appeared first on Fedora Community Blog.

                    
                    
                    December 01, 2015 02:38 PM
                    
                

--------------------------------------------------------------------------
POST 12 ->
Post For Alexander Todorov: Hosting Multiple Python WSGI Scripts on OpenShift



                    
                        

                                
                                Alexander Todorov

                                (atodorov)
                        

                        Hosting Multiple Python WSGI Scripts on OpenShift
                    

                    

                        With OpenShift you can host WSGI Python
applications. By default the Python cartridge comes with a simple WSGI app
and the following directory layout
./
./.openshift/
./requirements.txt
./setup.py
./wsgi.py



I wanted to add my
GitHub Bugzilla Hook
in a subdirectory (git submodule actually) and simply reserve a URL which will
be served by this app. My intention is also to add other small scripts to the
same cartridge in order to better utilize the available resources.
Using WSGIScriptAlias inside .htaccess DOESN'T WORK! OpenShift errors
out when WSGIScriptAlias is present. I suspect this to be a known limitation
and I have an open support case with Red Hat to confirm this.
My workaround is to configure the URL paths from the wsgi.py file in the root
directory. For example
diff --git a/wsgi.py b/wsgi.py
index c443581..20e2bf5 100644
--- a/wsgi.py
+++ b/wsgi.py
@@ -12,7 +12,12 @@ except IOError:
 # line, it's possible required libraries won't be in your searchable path
 #
 
+from github_bugzilla_hook import wsgi as ghbzh
+
 def application(environ, start_response):
+    # custom paths
+    if environ['PATH_INFO'] == '/github-bugzilla-hook/':
+        return ghbzh.application(environ, start_response)
 
     ctype = 'text/plain'
     if environ['PATH_INFO'] == '/health':



This does the job and is almost the same as configuring the path in .htaccess.
I hope it helps you!

                    
                    
                    December 01, 2015 11:34 AM
                    
                

--------------------------------------------------------------------------
POST 13 ->
Post For Alexander Todorov: Commit a file with the GitHub API and Python



                    
                        

                                
                                Alexander Todorov

                                (atodorov)
                        

                        Commit a file with the GitHub API and Python
                    

                    

                        How do you commit changes to a file using the GitHub API ?
I've found
this post
by Levi Botelho which explains the necessary steps but without any code.
So I've used it and created a
Python example.
I've rearranged the steps so that all write operations follow after a certain
section in the code and also added an intermediate section which creates the
updated content based on what is available in the repository.
I'm just appending
versions of Markdown to the .travis.yml (I will explain why in my next post)
and this is hard-coded for the sake of example. All content related operations
are also based on the GitHub API because I want to be independent of the source
code being around when I push this script to a hosting provider.
I've tested this script against itself. In the
commits log
you can find the Automatic update to Markdown-X.Y messages. These are
from the script. Also notice the Merge remote-tracking branch 'origin/master'
messages, these appeared when I pulled to my local copy. I believe the
reason for this is that I have some dangling trees and/or commits from
the time I was still experimenting with a broken script. I've tested on another
clean repository and there are
no such merges.
IMPORTANT
For this to work you need to properly authenticate with GitHub. I've crated
a new token at https://github.com/settings/tokens with the public_repo
permission and that works for me.

                    
                    
                    December 01, 2015 10:44 AM
                    
                

--------------------------------------------------------------------------
POST 14 ->
Post For Perl SIG: podlators-4.00 in Rawhide



                    
                        

                                
                                Perl SIG

                                (ppisar)
                        

                        podlators-4.00 in Rawhide
                    

                    

                        

                    
                    
                    December 01, 2015 09:08 AM
                    
                

--------------------------------------------------------------------------
POST 15 ->
Post For Luya Tshimbalanga: Trying Talky.io



                    
                        

                                
                                Luya Tshimbalanga

                                (luya)
                        

                        Trying Talky.io
                    

                    

                        Talky.io have updated their website featuring their WebRTC chat. One of intriguing feature is the support up to 15 people highlighted below.Revamped Talky.io website featuring WebRTCIt appears their systems is a worthy alterntive of Google HangOut. It will be nice project like Empathy carries more love.

                    
                    
                    December 01, 2015 05:23 AM
                    
                

--------------------------------------------------------------------------
POST 16 ->
Post For Carlos Morel-Riquelme: Virtualbox on Fedora



                    
                        

                                
                                Carlos Morel-Riquelme

                                (asleqia)
                        

                        Virtualbox on Fedora
                    

                    

                        Make simpleFirst update your kernel and later reboot your machine[root@new-host-5 asleqia]# dnf -y update kernel && rebootNow we need install the dependencies and some kernel modules[root@new-host-5
 asleqia]# dnf -y install binutils gcc make patch libgomp glibc-headers 
glibc-devel dkms kernel-devel kernel-core kernel-headers kernel-modules 
kernel-modules-extraNow we need download and install Virtualbox32 bits[root@new-host-5 asleqia]# dnf -y install http://download.virtualbox.org/virtualbox/5.0.10/VirtualBox-5.0-5.0.10_104061_fedora22-1.i686.rpm64 bits[root@new-host-5 asleqia]# dnf -y install http://download.virtualbox.org/virtualbox/5.0.10/VirtualBox-5.0-5.0.10_104061_fedora22-1.x86_64.rpmRun virtualbox script[root@new-host-5 asleqia]# sudo /etc/init.d/vboxdrv setupStopping VirtualBox kernel modules                         [  OK  ]Uninstalling old VirtualBox DKMS kernel modules            [  OK  ]Trying to register the VirtualBox kernel modules using DKMS[  OK  ]Starting VirtualBox kernel modules                         [  OK  ][root@new-host-5 asleqia]# Add your username to the virtualbox group[root@new-host-5 asleqia]# usermod -a -G vboxusers $USERit’s all.

                    
                    
                    December 01, 2015 02:49 AM
                    
                

--------------------------------------------------------------------------
POST 17 ->
Post For Giannis Konstantinidis: How Is Fossaegean Doing?



                    
                        

                                
                                Giannis Konstantinidis

                                (giannisk)
                        

                        How Is Fossaegean Doing?
                    

                    

                        I have been enrolled at the University of the Aegean for more than two years so far. It is a multi-campus university located in six (6) Greek islands: Chios, Lemnos, Lesvos, Rhodes, Samos and Syros. The Dept. of Information & Communication Systems Engineering, where I'm studying, is based in the town of Karlovassi in Samos.

Since I moved into the island, one of the first things I did was to find out if there were any people around interested in free & open source technologies. Luckily, there was this community called fossaegean, which pretty much stands for Free & Open Source Software Community of the University of the Aegean. However, it was not that active back then.

Let me tell you something: I'm not just passionate about free & open source software, I'm crazy about it. And I certainly enjoy spreading the word about things I value. That is why, together with other people, we decided to put some effort and bring the community back to life.

Over the last two academic years, we have organized more than fourteen (14) events (mostly workshops and presentations). For this academic year we had set a goal of ten (10) events, and within three (3) months we are already past seven (7). This probably makes us one of the most (if not the most) active tech-related student communities in our university.

 During our "Intro to HTML" workshop (photo by Zacharias Mitzelos, CC BY-NC-ND).

Some of our very recent activities include: Intros to HTML & CSS (part of our web dev series of workshops), a Fedora 23 Release Party, an Arduino workshop and not-to-forget those great OpenBBQs. For more info regarding our Events, you can have a look at this page in our wiki. Where do all these take place? Thankfully, we have our own space provided by the university. A soon-to-be fully-equiped hackerspace I would say!

 Greek Fedora contributors, alongside people from our community, during FOSSCOMM 2015 (photo by Zacharias Mitzelos, CC BY-NC-ND).

What could you expect in the near future? Plenty of workshops, for sure. We have some interesting topics, including Android, Arduino, BASH, Bitcoin, Fedora, Firefox OS, JavaScript, Jekyll, Ruby/Ruby on Rails and many more. But it's not just about the workshops; our goal is to bring students together and do stuff. There are quite a few projects we have in mind and I really can't wait to share more details with you.

Our people are the ones that make things possible and keep the space running. A big shoutout to Christos Sotirelis, George Makrakis, Vicky Tsima, Zacharias Mitzelos and many more, who currently act as the backbone of our community.

Exciting times ahead, wish us the best of luck! :)

                    
                    
                    December 01, 2015 02:41 AM
                    
                

--------------------------------------------------------------------------
POST 18 ->
Post For Carlos Morel-Riquelme: Virtualbox en Fedora 23



                    
                        

                                
                                Carlos Morel-Riquelme

                                (asleqia)
                        

                        Virtualbox en Fedora 23
                    

                    

                        Házlo simple.Primero actualiza tu kernel y luego reinicia[root@new-host-5 asleqia]# dnf -y update kernel && rebootAhora instalamos las dependecias y los módulos necesarios del kernel[root@new-host-5 asleqia]# dnf -y install binutils gcc make patch libgomp glibc-headers glibc-devel dkms kernel-devel kernel-core kernel-headers kernel-modules kernel-modules-extraPaso seguido descargamos e instalamos Virtualbox32 bits[root@new-host-5 asleqia]# dnf -y install http://download.virtualbox.org/virtualbox/5.0.10/VirtualBox-5.0-5.0.10_104061_fedora22-1.i686.rpm64 bits[root@new-host-5 asleqia]# dnf -y install http://download.virtualbox.org/virtualbox/5.0.10/VirtualBox-5.0-5.0.10_104061_fedora22-1.x86_64.rpmEjecutamos el script de virtualbox ( OJO que cada vez que actualizen el kernel y los módulos deberán de volver a ejecutar el script. [root@new-host-5 asleqia]# sudo /etc/init.d/vboxdrv setupStopping VirtualBox kernel modules                         [  OK  ]Uninstalling old VirtualBox DKMS kernel modules            [  OK  ]Trying to register the VirtualBox kernel modules using DKMS[  OK  ]Starting VirtualBox kernel modules                         [  OK  ][root@new-host-5 asleqia]# Agregamos nuestro usuario al grupo de Virtualbox[root@new-host-5 asleqia]# usermod -a -G vboxusers $USERListo.

                    
                    
                    December 01, 2015 02:21 AM
                    
                

--------------------------------------------------------------------------
POST 19 ->
Post For Fedora Infrastructure Status: All systems go



                    
                        

                                
                                Fedora Infrastructure Status

                                (admin)
                        

                        All systems go
                    

                    

                        Service 'COPR Build System' now has status: good: Everything seems to be working.

                    
                    
                    December 01, 2015 01:20 AM
                    
                

--------------------------------------------------------------------------
POST 20 ->
Post For Laura Abbott: A look at the kernel bisection scripts



                    
                        

                                
                                Laura Abbott

                                (labbott)
                        

                        A look at the kernel bisection scripts
                    

                    

                        I've been hacking on the bisection scripts for quite some time now.
Things got stalled for a bit in October/November. I introduced
several bugs which caused me to lose multiple days of testing verification so
I took a break and worked on other things to relieve my frustrations.
They are now at the point where they could use some testing besides my own.
Here's a walk through of what I have
F21 is going to be going EOL soon. The current (and final) kernel is
4.1.13-101.fc21. An upgrade to F23 might put you at 4.2.6-300.fc23. Upgrades
between major versions are a common point at which things break. Let's
pretend that something in the kernel broke between those two versions.
Grab a copy of the bisect scripts
$ git clone https://pagure.io/fedbisect.git
$ cd fedbisect

This contains the scripts. In order to bisect, we need copies of the git trees.
The bisect scripts will take care of this. Everything will be stored in a
subidrectory. This allows multiple
bisects to be going on at the same time. Each command will take the target
directory as an arguemnt. Generally the form will be ./fedbisect.sh <command>
<target dir>. For this example, the target name will be broken-things. The
first step is to sync the trees
$ ./fedbisect.sh sync broken-things
<take a  break while this syncs, it may take a while>

a directory named broken-things is now present. Inside the directory:
$ ls broken-things/
bisect-step  kernel  pkg-git  step-0

kernel is a clone of the tree from kernel.org, pkg-git is the fedora
repository. bisect-step and step-0 are part of the state for bisection. To
actually start a bisect between the two kernel versions
$ ./fedbisect.sh start broken-things 4.2.6-300 4.1.13-101

Note the order, it's bad tag first followed by good tag.
Behinds the scenes, this is setting up the kernel tree to run git bisect. If
you look at the kernel tree you will see exactly that:
$ cd broken-things/kernel
$ git bisect log
# bad: [1c02865136fee1d10d434dc9e3616c8e39905e9b] Linux 4.2.6
# good: [1f2ce4a2e7aea3a2123b17aff62a80553df31e21] Linux 4.1.13
git bisect start 'v4.2.6' 'v4.1.13'

Now you can build
$ ./fedbisect.sh build broken-things

This is another command that will take a long time to run. In order for these
scripts to be better than a regular bisect, the patches from Fedora need to
be applied. Figuring out which set of patches to be applied is tricky as noted
previously and brute force is still the best solution. With the exception of
a few commits in the merge window, most commits will build but if for some
reason no appropriate patches can be found, an RPM will be generated of just
the upstream version. At the end there will be a message such as
Got a build that built! Check in /home/labbott/fedbisect/broken-things/step-0 for rpms

and in that folder there will be RPMs to install (there will also be a number
of logs showing what exactly failed. Those can be ignored).
$ ls broken-things/step-0/*.rpm
broken-things/step-0/kernel-9.9.9-0.x86_64.rpm
broken-things/step-0/kernel-devel-9.9.9-0.x86_64.rpm
broken-things/step-0/kernel-headers-9.9.9-0.x86_64.rpm

The RPMs are generated from a custom kernel.spec. It's mostly the same as
the regular one but lots of stuff has been ripped out (perf, debug options,
cpu power util etc.) and it's just one big package. This was mostly for ease
of generation of the RPM. When generating snapshots, it turned out to be
a pain to figure out which filters to apply, especially if module names
changed. Copying over parts and editing where necessary seemed like an uphill
battle for not much value. The lifespan of these bisection images is going
to be very short so making the trade off for build ease and time (copying
modules takes a loooong time) seemed reasonable.  In order
to make sure the kernel will always install the version number is 9.9.9-bisect_step
so each installation step should be increasing.
Once the kernel is installed, tests can be run. When there is a result,
the build can be marked as good
$ ./fedbisect.sh good broken-things

or bad
$ ./fedbisect.sh bad broken-things

or it can be skipped if the build is untestable
$ ./fedbisect.sh skip broken-things

Now you can build again
$ ./fedbisect.sh build broken-things

and repeat marking the build as good or bad until the bisect scripts
indicate that a broken commit is found.
These scripts are still in the testing states so there may be problems.
I suspect most of them will be in the setup phase. The scripts are
available on pagure . Feedback/bug
reports/pull requests are very welcome. Suggestions for future
extensions are also welcome although I have my own list there as well.

                    
                    
                    December 01, 2015 12:00 AM
                    
                

--------------------------------------------------------------------------
POST 21 ->
Post For Fedora Infrastructure Status: There are scheduled downtimes in progress



                    
                        

                                
                                Fedora Infrastructure Status

                                (admin)
                        

                        There are scheduled downtimes in progress
                    

                    

                        Service 'COPR Build System' now has status: scheduled: Scheduled cloud outage in progress

                    
                    
                    November 30, 2015 11:59 PM
                    
                

--------------------------------------------------------------------------
POST 22 ->
Post For Josef Strzibny: DNS for your Vagrant needs: with Landrush, libvirt and dnsmasq



                    
                        

                                
                                Josef Strzibny

                                (jstribny)
                        

                        DNS for your Vagrant needs: with Landrush, libvirt and dnsmasq
                    

                    

                        Have you ever needed a DNS server that would be visible both on your host and your Vagrant guests? Landrush is one of those things that can pretty much save you. Unfortunately it was designed around VirtualBox and Mac OS, so it does not work on Linux out-of-the-box. And it does not work with libvirt provider at all. Until of course recently since I added the support there. Here is how to make all that work together on Fedora.
First things first — my libvirt patch is not yet merged, so you will have to build Landrush yourself. Check out my fork of Landrush and build the plugin with rake build, than you can install it with vagrant plugin install command:
$ bundle
$ bundle exec rake build
$ vagrant plugin install ./pkg/landrush-0.18.0.gem

This expects you to have Bundler and Vagrant installed. If you don’t, check Fedora Developer Portal and learn how to do it.
Now you should be able to run Landrush and it should work just fine for your guests. To confirm that Landrush is running run vagrant landrush status. Let’s make it work on Linux host too! On Mac OS Landrush adds entries in /etc/resolver, unfortunately that won’t work on Linux. That’s why I put dnsmasq in the title of this post.
We can tell dnsmasq to listen on 127.0.0.1 (localhost) and make an entry to redirect requested domain names (such as all ending with .dev or .local for example) to our Landrush DNS server (which runs on localhost too, but on port 10053 instead of standard 53). Let’s do it:
Add the following to /etc/dnsmasq.conf:
listen-address=127.0.0.1

And create a following file to redirect our .local domains traffic to Landrush:
$ cat /etc/dnsmasq.d/vagrant-landrush 
address=/.local/127.0.0.1#10053

Now let’s try to start dnsmasq service:
$ sudo systemctl start dnsmasq.service 
$ sudo systemctl status dnsmasq.service 
? dnsmasq.service - DNS caching server.
   Loaded: loaded (/usr/lib/systemd/system/dnsmasq.service; disabled; vendor preset: disabled)
   Active: failed (Result: exit-code) since Sun 2015-11-29 10:13:17 CET; 4s ago
  Process: 26654 ExecStart=/usr/sbin/dnsmasq -k (code=exited, status=2)
 Main PID: 26654 (code=exited, status=2)

Nov 29 10:13:17 strzibny-x1 systemd[1]: Started DNS caching server..
Nov 29 10:13:17 strzibny-x1 systemd[1]: Starting DNS caching server....
Nov 29 10:13:17 strzibny-x1 dnsmasq[26654]: dnsmasq: failed to create listening socket for port 53: Address already in use
Nov 29 10:13:17 strzibny-x1 systemd[1]: dnsmasq.service: main process exited, code=exited, status=2/INVALIDARGUMENT
Nov 29 10:13:17 strzibny-x1 systemd[1]: Unit dnsmasq.service entered failed state.
Nov 29 10:13:17 strzibny-x1 systemd[1]: dnsmasq.service failed.

Oh no. It seems that we have a conflict here. This is because libvirt actually starts dnsmasq for your domains as well automatically.
We can fix it by telling the system version of dnsmasq to bind to specific interfaces. Open the /etc/dnsmasq.conf again and list only the interfaces you need (and don’t conflict):
listen-address=127.0.0.1
...
# on my system
interface=wlp4s0
bind-interfaces

The service should start just fine afterwards. Let’s see if we can resolve our host:
$ host site.local
Host site.local not found: 3(NXDOMAIN)

We have dnsmasq set up, but it’s not used. For that we need to edit /etc/resolv.conf and add our new name server:
nameserver 127.0.0.1
...

Is this working?
$ host site.local
site.local has address 127.0.0.1

Great! Can we ping it yet? Yes and no. If you went with .dev domain name, you are fine, but if you went with my changes and setup .local instead, ping won’t see your new settings. This is because of Avahi.
To change the domain for Avahi from .local, edit the avahi-daemon.conf configuration file and restart avahi-daemon:
$ cat /etc/avahi/avahi-daemon.conf
[server]
domain-name=.something_else_than_local
...

$ sudo systemctl restart avahi-daemon

If you don’t really need Avahi, you can also change the following in nsswitch.conf:
$ cat /etc/nsswitch.conf
...
#hosts:          files mdns4_minimal [NOTFOUND=return] dns
hosts:          files dns

Now you can ping your development hostnames and they should be redirected to your VM by dnsmasq and Landrush.
If you want to check that it works alongside port forwarding, you can tell Vagrant to forward port 8080 from your host to 8000 on your guest and run simple HTTP server there:
# cat Vagrantfile
...
  config.vm.network "forwarded_port", guest: 8000, host: 8080

  # Fedora 23 example
  config.vm.provision "shell", inline: <<-SHELL
     python3 -m http.server &
  SHELL
...

Afterwards you can open your browser or use curl:
$ curl http://site.local:8080
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Directory listing for /</title>
</head>
<body>
<h1>Directory listing for /</h1>
<hr>
<ul>
<li><a href=".bash_history">.bash_history</a></li>
<li><a href=".bash_logout">.bash_logout</a></li>
<li><a href=".bash_profile">.bash_profile</a></li>
<li><a href=".bashrc">.bashrc</a></li>
<li><a href=".ssh/">.ssh/</a></li>
</ul>
<hr>
</body>
</html>


                    
                    
                    November 30, 2015 10:57 PM
                    
                

--------------------------------------------------------------------------
POST 23 ->
Post For Fedora Community Blog: FESCo Elections: Interview with Adam Miller (maxamillion)



                    
                        

                                
                                Fedora Community Blog

                                (admin)
                        

                        FESCo Elections: Interview with Adam Miller (maxamillion)
                    

                    

                        Fedora Engineering Steering Council badge
This is a part of the FESCo Elections Interviews series. Voting is open to all Fedora contributors. The  voting period starts on Tuesday, December 08 and closes promptly at 23:59:59 UTC on Monday, December 14th. Please read the responses from candidates and make your choices carefully. Feel free to ask questions to the candidates here (preferred) or elsewhere!
Interview with Adam Miller (maxamillion)

Fedora Account: maxamillion
IRC: maxamillion (Primarily active in #fedora-devel, #fedora-releng, #fedora-cloud)
Fedora User Wiki Page


What is your background in Fedora? What have you worked on and what are you doing now?
My history in Fedora technically pre-dates the Fedora Project itself, I’ve been a member of the user community since Red Hat Linux 7 and I still have my boxed set of “Deluxe Workstation” sitting on my book shelf. However, my time as an active contributor to the Fedora Project is far more recent having started during the Fedora 8 cycle when I both became a Fedora Packager and a member of the Fedora QA community.
I’ve been a little all over the place over the years as I learn new things and am able to contribute to new aspects of the project or newer technologies that Fedora is working on/with have become things I find interesting. Below is a list of things I’ve been involved in, including what I continue to participate with and what I’m less involved in these days.
Current activities in Fedora include:

Fedora Release Engineering Team Member
Fedora Cloud SIG Member
Fedora Packager
Fedora Proven Packager
Fedora Package Sponsor
Fedora EPEL SIG Member

Past activities or things I’m less involved in Fedora:

Fedora QA Community
Fedora QA Proven Tester
Fedora XFCE SIG
Fedora KDE SIG

Thing’s I’m currently working on for Fedora are largely around Release Engineering, Cloud, and Containers. I’m working with others in the community to clean up “technical debt” around the tools used to actually produce Fedora as well as help to create new ones that help modernize the build and compose pipeline in order to allow the creation of Fedora to be more agile at it’s core. These tools are aimed at catering to the Fedora.Next concept.
I’m also participating in an effort to establish an easier “on-ramp” to Fedora Release Engineering with hopes of making it more welcoming for new community members who take an interest in Release Engineering to join in the efforts and contribute. Much of this is happening in the RelEng Pagure git forge location.
https://pagure.io/releng
Along with this, here are current or recent Fedora Changes I’m participating in:

https://fedoraproject.org/wiki/Changes/OpenShiftOrigin
https://fedoraproject.org/wiki/Changes/Layered_Docker_Image_Build_Service
https://fedoraproject.org/wiki/Changes/Two_Week_Atomic

As of April 2015 I joined the Fedora Engineering Team.
Do you think Fedora should be time based or more feature driven distribution? Or compromise?
This is something that I tend to think we need a nice compromise on. Maintaining a time based release cycle is good for the sake of the users because it makes things like major updates predictable. However, by targeting features we can make sure that we’re delivering releases based on project motivations around features that work towards the future of Fedora. I think we do a pretty good job at this now but am not closed off to the idea of changing it in the future in the event a solid argument for making the change were to present itself.
What are the most pressing issues facing Fedora today (from engineering POV)? What should we do about them?
To me this question is going to be extremely subjective based on the perspective of the person that is being asked. That being said, for me myself I happen to think that our build and compose pipeline is still very rigid which causes our ability to produce new types of “deliverables” (think cloud or docker images, and then whatever is new and cool in 2 years) to be slower than it could be. Also, Fedora is a massive constantly moving target so it’s always a challenge to sanitize that.
What are your interests and experience outside of Fedora? What of those things will help you in this role?
My interests outside of Fedora are operating systems, programming languages, package managers, build systems and systems automation. I know that probably sounds horribly scripted or some kind of really targeted response to an honest question but it’s not, that really is a list of things I find very fascinating and I spend a large part of my free time trying to further educate myself on those topics. These interests in a lot of ways are what lead me to Fedora and why I’ve stayed in the community and plan to for the foreseeable future.
I’m often reading about operating system concepts as they relate to ongoing work in the open source community with the advent of technologies like containers and the ongoing convergence of the linux world around systemd. As a random side note, my favorite books to date in the Operating System space are Andrew S. Tanenbaum’s MINIX (Racoon) book and Robert Love’s Kernel Development book, but I’m always on the lookout for a good one so if you have suggestions I’d love to know about them. 
I also find programming languages fascinating, the different paradigms and semantics are interesting in the way that language creators approach a similar set of problems with different solutions. I spend a potentially unreasonable amount of time reading books and articles about programming languages new and old that I’m not currently familiar with just for the sake of education. I wouldn’t claim to really “know” more than a few programming languages (python being my favorite) but I dabble a lot to try and constantly learn new things.
Package managers is an odd one I’ll admit, but I think it falls under the operating system topic because without a package manager, the OS is relatively boring. I’ve read as much as I can about package managers other than rpm/yum/dnf in an attempt to understand different perspectives on solving the common problem of package management including programming language specific toolsets. It’s mostly a thought experiment as I ponder how we could solve all the problems in Fedora space to cater to system level packaging and user level (including developer toolsets, programming language package management) using a nice unified toolset, but it’s something that I like to think helps keep me on my toes and not stuck with a case a “tunnel vision” thinking only about a single set of concerns around the topic of package management.
My interest in build systems spawned from when I started picking apart how the whole “./configure && make && make install” process actually worked. From there it spawned into an exploration of automake, cmake, qmake, scons, waf and more as well as distributed build systems like koji, obs, buildbot, and others. This also caused a tangent off into the land of continuous integration and continuous delivery, both of which are really interesting topics I enjoy reading about and trying new approaches to as new tools/techniques come to light.
Systems automation is one that goes all the way back to the first time I really learned the true power of the shell (bash). I wanted to script everything and it just flourished from there as an almost obsession with wanting to automate everything. I’m of the opinion that if I can completely automate away my current task set, then I can spend that time working on more interesting things. My favorite automation framework/tool is Ansible, I have some patches in upstream Ansible and even manage my laptop with a playbook.
Anything else voters should know about you?
I live for this stuff, a big part of why I wake up in the morning is because I have an earnest passion for Open Source software. I have a Red Hat Shadowman tattoo on my left forearm that I had even before working for Red Hat. (A picture can be found on my Fedora User Wiki page)
How can FESCo do a better job communicating with the rest of the Fedora community, or do you feel that FESCo is already doing well here?
I don’t inherently think that FESCo does a bad job of communicating, but I think as with all things there’s room for improvement as newer community members or those not as ingrained in the daily processes of Fedora may not always be familiar with what FESCo is doing because they don’t know where to obtain the information. This is also something that Fedora Hubs might be able to help address. However, in the mean time I think FESCo should collectively try to engage with the community instead of being passive about the spread of information, maybe making a point to post regular status updates to the Fedora Community Blog or writing articles for the Fedora Magazine. There’s likely an unclear understanding of the ongoing work that FESCo is involved in.
What can you accomplish as part of FESCo that you couldn’t accomplish as a contributor to Fedora without sitting on FESCo?
I think this largely goes back to what FESCo does, “FESCo handles the process of accepting new features, the acceptance of new packaging sponsors, Special Interest Groups (SIGs) and SIG Oversight, the packaging process, handling and enforcement of maintainer issues and other technical matters related to the distribution and its construction.” such that I believe that not any one Fedora Contributor is any more able to accomplish things within the purview of The Fedora Project than any other, regardless of if you sit on a Committee or not. However, the members of FESCo have the unique opportunity to help shepherd and advise those who are working towards accomplishing specific goals while keeping the technical concerns of the entire project in perspective. I believe that I could participate and contribute in that space.
With the advent of Fedora Council now, what do you see as the significance of FESCO in Fedora project?
I think the Fedora Council’s main goal is to focus on higher level concepts or ideas of the Fedora Project as a whole where as FESCo focuses on the technical implementation or concerns of those higher level concepts. I think a solid example of this would be the Fedora.Next initiative proposed by the Fedora Project Leader, Matt Miller, planned and guided from a high level conceptual standpoint within the Council where as FESCo has and will continue to provide guidance towards and help to enable the technical efforts specific to implementing the concepts of Fedora.Next as well as other initiatives that come from the Fedora Council.
Do you think FESCo can help with the reduction of the backlog of >400 packages awaiting review?
I would like to think that FESCo can, but it’s going to require more than just the small number of people who are a part of FESCo to conquer that many package reviews. This is definitely something that I think falls within the realm of FESCo’s charter to help resolve. Hopefully we can increase visibility on not only the review backlog itself but also that this is a blocker on so many packages waiting to get into Fedora. Possibly the creation of a Package Review SIG that focuses on enabling new packages to make their way into Fedora in a timely manner. This isn’t something that I have a firm answer to but hope that we could collectively focus on to resolve or at least help remedy.
What’s your point of view about library bundling in packages?
tl;dr – I’d prefer we don’t bundle things but I think with the current landscape of the open source ecosystem, it’s something that we need to be able to compromise on.
Library bundling is something I think is a bad idea. That being said, we don’t live in the same world we did in the late 90s and early 2000s where the primary method of acquiring software is the distribution’s repository. Upstream projects used to release source code and expected users to build from source or relied upon downstream projects such as Fedora to consume them and deliver consumable versions of their software with whatever policies around things like bundled libraries that went along with that project. These days it is very common for upstream projects to distribute binary releases themselves with the goal of targeting as many distros and/or platforms as possible. As a side effect of this, bundled libraries has become increasingly commonplace. I think that we should absolutely work towards debundling things that are bundled where applicable but the reality is that some upstreams have no interest in this and are not receptive to the changes. With that in mind, we can either maintain a fork or find a way to manage and mitigate the impact of bundled libraries in Fedora, which is something I think FESCo recently did very well. This goes along with the mantra of “upstream first” such that we engage with upstream projects and communities.
The post FESCo Elections: Interview with Adam Miller (maxamillion) appeared first on Fedora Community Blog.

                    
                    
                    November 30, 2015 10:17 PM
                    
                

--------------------------------------------------------------------------
POST 24 ->
Post For Jonathan Dieter: Freeswitch vs. Asterisk?



                    
                        

                                
                                Jonathan Dieter

                                (jdieter)
                        

                        Freeswitch vs. Asterisk?
                    

                    

                        VOIP of the highest quality
We’ve been experimenting with VOIP in our school, primarily for internal communication.  I’ve set up both asterisk and freeswitch servers, and have been quite frustrated with the limitations of both.
Asterisk only allows one registration to be connected to each extension.  Yes, there are ways to work around this restriction (for extension 101, set up multiple extensions – 980101, 981101, 982101, and then set up a ring group 101 that rings those extensions simultaneously), but it’s an incredibly irritating workaround.
Freeswitch does allow multiple registrations on a single extension, but it has other problems.  Some of our softphones are running over WiFi and we need SRTP for these systems.  Other hardware phones don’t support SRTP, which, while not ideal, is less of an issue because they’re connected via a physical link that we have complete control over.  Unfortunately, even with Freeswitch in bridging mode, it refuses to use SRTP on the softphone link, while using no encryption on the hardware phone link.  It’s either all or nothing.  Which means, during our testing phase, we’re stuck at nothing.  Lovely.
So should I bail on Freeswitch and switch over to Asterisk?  Stick with Freeswitch and hope that I can work out some way of fixing the SRTP problem?  Or should I just give our staff tin cans attached to Cat-6 cable and tell them that’s the new VOIP system?   

                    
                    
                    November 30, 2015 08:08 PM
                    
                

--------------------------------------------------------------------------
POST 25 ->
Post For Fedora Community Blog: FESCo Elections: Interview with Justin Forbes (jforbes)



                    
                        

                                
                                Fedora Community Blog

                                (admin)
                        

                        FESCo Elections: Interview with Justin Forbes (jforbes)
                    

                    

                        Fedora Engineering Steering Council badge
This is a part of the FESCo Elections Interviews series. Voting is open to all Fedora contributors. The voting period starts on Tuesday, December 08 and closes promptly at 23:59:59 UTC on Monday, December 14th. Please read the responses from candidates and make your choices carefully. Feel free to ask questions to the candidates here (preferred) or elsewhere!
Interview with Justin Forbes (jforbes)

Fedora Account: jforbes
IRC: jforbes (primarily active in #fedora-devel, #fedora-kernel, #fedora-cloud)
Fedora User Wiki Page


What is your background in Fedora? What have you worked on and what are you doing now?
I was involved in Fedora at the very beginning, and worked to get the port of Fedora Core 1 to x86_64 done. Shortly before the Fedora Core 2 release, I took a break to go work for rPath for a few years. I returned in the Fedora 11 development era and have been active ever since. Previously, I was the Red Hat point person for Fedora virtualization efforts, helped to get the Cloud SIG up an running, and have been a Fedora kernel maintainer for a few years now. I am both a contributor and a user of Fedora, and while I am happy to put effort into the pieces where I contribute, I also want Fedora to “just work” without a lot of effort as a user.
Do you think Fedora should be time based or more feature driven distribution? Or compromise?
There are advantages to both methods. I think we generally do a good job in balancing the needs here. Fedora has a lot of moving parts, each following different upstream release schedules. If we were completely feature driven, there would never be a release as there is always a project somewhere with a major feature “almost done”. I also don’t see much point in doing a new release without at least a couple of compelling features, but by tying these to a time based schedule, we can ensure that we actually get to a release with features that are expected in the time frame, and actually get a release out. Of course this doesn’t work 100% of the time, sometimes features just aren’t ready and have to be postponed until a future release. Sometimes (frequently) our releases get short delays to ensure that features are working as intended. But the compromise works, largely because of the community working to test features as they near completion instead of just waiting for a release to say something is broken.
What are the most pressing issues facing Fedora today (from engineering POV)? What should we do about them?
With the creation of flavors in the Fedora 21 cycle, we have identified and addressed some of the major differing use cases for Fedora. I think we still have some work to do in making sure we are offering optimal solutions for these use cases, while balancing maintainability.
I also think we have an obligation to improve the out of the box experience for new Fedora users. We need to make things a bit more intuitive. I know this is a broad scope, but specifically we need to find ways to make the user experience better without compromising the Fedora principals.
What are your interests and experience outside of Fedora? What of those things will help you in this role?
Outside of Fedora/Red Hat/Linux, I am a father of 3 kids. I have a pretty good amount of experience with looking at things from multiple sides before jumping to conclusions when there are opposing sides.
My other primary interest is in audio production and composition.
Anything else voters should know about you?
Not a whole lot I suppose, I have gotten pretty boring in my old age…
How can FESCo do a better job communicating with the rest of the Fedora community, or do you feel that FESCo is already doing well here?
I think FESCo does a decent job with communication for those who are paying attention. Meeting agenda and summaries are sent to the development list, which I think is the target audience for those items. Members will often blog about issues when necessary. Often those viewpoints do not reflect FESCo as a whole, but that is what makes FESCo actually work. There are going to be opposing viewpoints about some issues, there should be. The only thing I might recommend as an addition is a “state of FESCo” type blog post every so often that kind of makes happenings over the last month or so a bit easier to digest for the non developer who just wants an idea of what is going on.
What can you accomplish as part of FESCo that you couldn’t accomplish as a contributor to Fedora without sitting on FESCo?
I believe I can bring a unique perspective on some issues that come across, and it is another way to contribute to the Fedora community that I have benefit so much from over the years. I am not looking to come in with some sort of an agenda, FESCo exists to serve Fedora, not the other way around.
With the advent of Fedora Council now, what do you see as the significance of FESCO in Fedora project?
The move to the council has been a great way to make sure that most areas are represented in the high level leadership of Fedora. FESCo is more focused on the technical side of things. They compliment each other very well.
Do you think FESCo can help with the reduction of the backlog of >400 packages awaiting review?
I do think so, but it is not an overnight fix. We have to lower the barrier to entry in getting people actually involved in Fedora. This doesn’t mean lower our expectations of contributors, but to make it easier for someone who would be a great contributor to get involved. I think there are people out there who could make great contributions to Fedora who just don’t know where to start, or don’t think it is worth the effort to find out. Some improvement has been made in this area, but there is a lot more work to do.
What’s your point of view about library bundling in packages?
I think this has to be addressed on a case by case basis. There are several technical issues with bundling, but most importantly, bundling can create a world of mess, and ultimately leave users exposed to security risks that they believed had been addressed. As a baseline rule, they should not be allowed. If there is a very compelling argument as to why bundling is the only feasible option, exceptions can be made. They have to be handled as exceptions though to keep things from spiraling out of control to where no one actually knows what Fedora is really shipping.
The post FESCo Elections: Interview with Justin Forbes (jforbes) appeared first on Fedora Community Blog.

                    
                    
                    November 30, 2015 06:06 PM
                    
                

--------------------------------------------------------------------------
POST 26 ->
Post For Fedora Community Blog: FAmSCo Elections: Interview with Ben Williams (Southern_Gentlem / kk4ewt)



                    
                        

                                
                                Fedora Community Blog

                                (admin)
                        

                        FAmSCo Elections: Interview with Ben Williams (Southern_Gentlem / kk4ewt)
                    

                    

                        Fedora Ambassador Steering Committee badge
This is a part of the FAmSCo Elections Interviews series. Voting is open to all Fedora contributors. The voting period starts on Tuesday, December 08 and closes promptly at 23:59:59 UTC on Monday, December 14th. Please read the responses from candidates and make your choices carefully. Feel free to ask questions to the candidates here (preferred) or elsewhere!
Interview with Ben Williams

Fedora Account: jbwillia
IRC: Southern_Gentlem / kk4ewt (usually in #fedora, #fedora-ambassadors)
Fedora User Wiki Page


What is your background in Fedora? What have you worked on and what are you doing now? 
Wow, I really had to think hard about this question.  I have been in #fedora channel asking questions and helping others since Fedora Core 1 timeframe , during the Fedora Core 3 timeframe i was made a channel operator for the #fedora channel. I continue working in the #fedora channel still today helping where i can (IRC nicks Southern_Gentlem, VileGent, kk4ewt).  In the FC5 timeframe I was a founding member of the Fedora Unity Project who worked to provide useful documentation and provided updated respins for the community, I am currently the person that works to provide the updated lives for the community. I have also served as the host for FUDCon Blacksburg 2012.  I have  represented Fedora at several events including but not limited to Scale, Southeast LinuxFest, Ohio Linuxfest,  Fosscon, and talks and Installfest with the Virginia Tech Linux Unix Users Group. and I am currently the East Coast Distribution Coordinator for Fedora Ambassadors North America.
Interest in traditional Linux events seems to be stagnating or even declining. How should the Ambassadors respond to this change? 
Well for one we all need to advertise Linux to the general public, it has been about 5 years since there was a push to advertise Linux to the general public.  (example: The Kid Commerical by IBM in 2005)
Our displays at events need to show the public what Linux can do for them for their daily computer tasks.  (examples be it from email, web browsing to using Linux for Amateur Radio Emergency Communications).
It seems the Ambassador activities are disconnected from the rest of the project. What is your way of fixing the issue? 
I have seen this for a long time, I would really like to see more cooperation between Documentation, Marketing, Design and the Ambassadors for getting info out to our community.  I don’t know if we need a central Trac or quarterly meeting of all the groups concerned to resolve these communication issues. In the past the Ambassadors had tri-fold brochures that covered different things (Music, Desktop, Publishing, etc.) that could be used by the Ambassador at events.
What is your take on the recent governance reorganization (Council, working groups, budget, etc.)? 
Well every organization goes through some sort of restructuring over time, we have a lot of things that have been working and we still have some rough edges on other things so IMHO time will tell what works the best.  As always Fedora will be driven by the ones doing the work.
Closing words
If I am elected to FAmSCo I will do as I have always done by doing the best I can to promote the project, and the people who give their blood, sweat and tears daily for the project.
– Ben Williams (jbwillia)
The post FAmSCo Elections: Interview with Ben Williams (Southern_Gentlem / kk4ewt) appeared first on Fedora Community Blog.

                    
                    
                    November 30, 2015 05:32 PM
                    
                

--------------------------------------------------------------------------
POST 27 ->
Post For Carlos Morel-Riquelme: Install SimpleScreenRecorder in Fedora



                    
                        

                                
                                Carlos Morel-Riquelme

                                (asleqia)
                        

                        Install SimpleScreenRecorder in Fedora
                    

                    

                        Make simpleAdd the russianfedora repositorysudo
 dnf install 
http://mirror.yandex.ru/fedora/russianfedora/russianfedora/free/fedora/russianfedora-free-release-stable.noarch.rpm
 
http://mirror.yandex.ru/fedora/russianfedora/russianfedora/nonfree/fedora/russianfedora-nonfree-release-stable.noarch.rpmNow install SSRsudo dnf install -y simplescreenrecorderit’s all.

                    
                    
                    November 30, 2015 04:23 PM
                    
                

--------------------------------------------------------------------------
POST 28 ->
Post For Carlos Morel-Riquelme: Instala Simplescreenrecorder en Fedora



                    
                        

                                
                                Carlos Morel-Riquelme

                                (asleqia)
                        

                        Instala Simplescreenrecorder en Fedora
                    

                    

                        Simple.Agreguen el repositorio del remix ruso de Fedorasudo dnf install http://mirror.yandex.ru/fedora/russianfedora/russianfedora/free/fedora/russianfedora-free-release-stable.noarch.rpm http://mirror.yandex.ru/fedora/russianfedora/russianfedora/nonfree/fedora/russianfedora-nonfree-release-stable.noarch.rpmInstalen SSRsudo dnf install -y simplescreenrecorderEs todo.

                    
                    
                    November 30, 2015 04:20 PM
                    
                

--------------------------------------------------------------------------
POST 29 ->
Post For Josh Bressers: Where is the physical trust boundary?



                    
                        

                                
                                Josh Bressers

                                (bressers)
                        

                        Where is the physical trust boundary?
                    

                    

                        There's a story of a toothbrush security advisory making the rounds.This advisory is pretty funny but it matters. The actual issue with the toothbrush isn't a huge deal, an attacker isn't going to do anything exciting with the problems. The interesting issue here is we're at the start of many problems like this we're going to see.Today some engineers built a clever toothbrush. Tomorrow they're going to build new things, different things. Security will matter for some of them. It won't matter for most of them.Boundaries of trustToday when we try to decide if something is a security issue we like to ask the question "Does this cross a trust boundary?" If it does, it's probably a security issue. If no trust boundary is crossed, it's probably not an issue. There are of course lots of corner cases and nuance, but we can generally apply the rule.Think of it this way. If a user can delete their own files, that's not crossing a trust boundary, that's just doing something silly. If a user can delete someone else's files, that's not good.This starts to get weird when we think about real things though.Boundaries of physical trust?What happens in the physical world? What counts as a trust boundary? In the toothbrush example above an attacker could gain knowledge of how someone is using a toothbrush. That's technically a trust boundary (an attacker can gain data they're not supposed to have), but let's face it, it's not a big deal. If your credit card number was also included in the data, sure no question there.But as such, we're talking about data that isn't exciting. You can make the argument about tracking data from a user over the course of time and across devices, let's not go there right now. Let's just keep the thinking small and contained.Where do we draw the line?If we think about physical devices, what are our lines? A concept of just a trust boundary doesn't really work here. I can think of three lines, all of which are important, but not equally important.SafetyHarmAnnoyanceSafetyWhen I say safety I'm thinking about a device that could literally kill a person. This could be something like disabling the brakes on a car. Making a toaster start a fire. Catastrophic events. I don't think anyone would ever claim this class of issues isn't a problem. They are serious, I would expect any vendor to take these very seriously.HarmHarm would be where someone or something can be hurt. Nothing catastrophic. Think maybe a small burn, or a scrape. Perhaps making someone fall down when using a scooter, or burn themselves with a device. We could argue this category for a while. Things will get fuzzy between if the problem is catastrophic. Some vendors will be less willing to deal with these but I bet most get fixed quickly.AnnoyanceAnnoyance is where things are going to get out of hand. This is where the toothbrush advisory lives. In the case of a toothbrush it's not going to be a huge deal. Should the vendor fix it? Probably. Should you get a new toothbrush over it? Probably not.The nuance will be which annoying problems deserve fixes and which ones don't? Some of these problems could cost you money. What if an attacker can turn up your thermostat so your furnace runs constantly? Now we have an issue that can cost real money. What if we have a problem where your 3D printer ruins a spool of filament? What if the oven burns the Christmas goose?Where is our trust boundary in the world of annoying problems? You can't just draw the line at money and goods. What happens if you can ring a person's door bell and they have to keep getting up to check the door? Things start to get really weird.Do you think a consumer will be willing to spend an extra $10 for "better security"? I doubt it. In the event a device will harm or kill a person there are government agencies to step in and stop such products. There are no agencies for leaking data and even if there were they would have limited resources. Compare "annoyance security" to all the products sold today that don't actually work, who is policing those?As of right now our future is going to be one where everything is connected to the Internet, none of it is secure, and nobody cares.Join the conversation, hit me up on twitter, I'm @joshbressers

                    
                    
                    November 30, 2015 02:18 PM
                    
                

--------------------------------------------------------------------------
POST 30 ->
Post For Ben Cotton: I support Software Freedom Conservancy



                    
                        

                                
                                Ben Cotton

                                (bcotton)
                        

                        I support Software Freedom Conservancy
                    

                    

                        If you’ve read this blog for any length of time, you know that free and open source software is important to me. It’s important to Software Freedom Conservancy as well. Conservancy is a 501(c)(3) organization dedicated to supporting software projects.
Conservancy provides a lot of services to member projects, including financial and administrivia. Conservancy also provides license enforcement services, including support of a high-profile suit against VMWare. Although Conservancy uses litigation as a last resort, it’s sometimes necessary. However, this has lead to some corporate sponsors pulling their funding.
In order to continue their efforts, Conservancy is moving to an individual-supporter model. I first became a Conservancy supporter last year, and when it’s shortly time to renew my support, I will contribute double. Free and open source software is important to my personal and professional lives, and the services Conservancy provide to projects is invaluable.
If you use computers at all, a Conservancy project is probably an important part of your daily life. Please join me in supporting the Software Freedom Conservancy with a tax-deductible* donation today.
*Consult your tax professional to see if donations are tax-deductible in your jurisdiction.

                    
                    
                    November 30, 2015 12:17 PM
                    
                

--------------------------------------------------------------------------
POST 31 ->
Post For Vojtech Trefny: Blivet-gui 1.0 in Fedora 23



                    
                        

                                
                                Vojtech Trefny

                                (vtrefny)
                        

                        Blivet-gui 1.0 in Fedora 23
                    

                    

                        Blivet-gui, a graphical tool for storage management, reached an important milestone -- version 1.0 (blivet-gui 1.0 was actually already released in September and it took me more than two months to write this blog post, the latest version available in rawhide is 1.2).
So what's new since the previous blog post? Obviously, there is the new UI. The visualization in case of more complicated storage configuration is still not as good as I want, but so far I have not found any solution that would make it less complicated for configurations working with many devices. My testing machine has 25 disks with more than 20 different LVM volume groups, software RAIDs and BTRFs volumes and it's sometimes quite hard not to be confused even with the new UI.

New UI -- visualization of disk with an extended partition and "c" LVM volume group

New UI -- visualization of physical volumes of "c" LVM volume group
If you have any ideas that would make the UI and visualization better, feel free to contact me.
Other new features besides the new UI were added - some more visible, some less:

It is now possible to "force" create extended or primary partition. In previous versions of blivet-GIU, the fourth partition was always created as logical inside an extended partition.


Added support for LVM snapshots and LVM ThinProvisioning.


Simple progress is displayed when running scheduled actions.


You can specify PE size when creating an LVM Volume Group.


Blivet-gui is now Python 3 only.


I have created an (temporary) icon for blivet-gui. And I have also added AppData for blivet-gui, so it will be available in GNOME Software.

Future of blivet-gui
Blivet-gui now has all planned features. There are some small "nice-to-have" things, but new features for future versions of blivet-gui will depend on new features of blivet. Blivet now prepares for a new big release "2.0" with a lot of changes in API and code and many new features. Already implemented ones include support for LVM cache and LVM RAID (thanks to Vratislav Podzimek for implementing these). The LVM cache support is actually implemented in blivet-gui (but not yet released).

Adding cached LVM logical volume in blivet-gui
Daily builds
If you'd like to keep track with new features, you can use my Copr repo with daily builds of blivet-gui, blivet and other projects of our team (including Anaconda).
As always, if you'd like to help, the source code is available on GitHub. New ideas and bug reports are welcome as well. Visit Zanata if you'd like to help with blivet-gui localization.
Tags: blivet-guifedoraenglish

                    
                    
                    November 30, 2015 10:00 AM
                    
                

--------------------------------------------------------------------------
POST 32 ->
Post For Fedora Magazine: Creating a laser light show with Fedora



                    
                        

                                
                                Fedora Magazine

                                (admin)
                        

                        Creating a laser light show with Fedora
                    

                    

                        Every day, people are making all kinds of incredible software powered by Fedora. The Fedora user community is broad and diverse, and sometimes, we hear about things that we never imagined possible. Rochester Institute of Technology student and Fedora user Brendan Whitfield developed an open-source library for interfacing with laser projectors to create all kinds of awesome images and animations using lasers (including the Fedora logo)! We wanted to know more about the work Brendan was doing and interviewed him about his project, LZR.

Impacting laser development with open-source
Brendan has always had a fascination for lasers.
LZR is one of Brendan’s latest projects fueled by a passion and interest in working with lasers. Since an early age, he wanted to learn more about all of the “magic” that goes behind powering powerful lights. LZR is just the latest manifestation of that obsession. In addition to writing the free and open-source library for handling the user’s graphics to the laser projector via a laser digital-to-analog converter (DAC), like EtherDream (open software DAC), he also spends some of his time building and modifying the actual laser projectors.
I spent some time with Brendan at the Rochester Mini Maker Faire on November 21st in Rochester, NY. In addition to being a student at RIT, he also is involved with FOSS@MAGIC, a group of students and professors passionate about Free and Open Source Software, which is associated with the FOSS Minor offered at RIT. As part of the FOSS@MAGIC booth at the Faire, he had a live demo of his laser software, along with a Leap Motion sensor to detect people’s fingers and convert it to moving lasers against a whiteboard. While I was with Brendan, I had the opportunity to ask him a few questions about his project and how open source influenced the creation of the library.
How does your program work and connect to the projector to create the digital laser images? How would you describe it to someone who has never seen your program’s code before?
“Lasers produce graphics by scanning a single beam according to vector data. To connect to a laser projector, you need a little bit of hardware. Typically, they take XY and color data from a digital-to-analog adapter that you attach to your computer. There are a number of proprietary options on the market, but also a smattering of independently-developed adapters. The one that caught my eye was the EtherDream. It’s an open-source ARM board that accepts vector graphics over Ethernet.
Playing with the lights. Adjusting the colors of the laser output.
This gets you halfway to a laser show, but you still need a human interface to produce the graphics. These are typically reminiscent of video editors, with timelines, clips, and effects. My code currently consists of a library, a daemon, and a visualizer. The library provides applications with all of the functions and data structures needed to easily operate on laser graphics.
Modularity is also a strong point I’m focusing on. I routinely run into freeware that is written as a monolith, which makes it difficult to splice your own programs into the mix. For this reason, LZR uses ZeroMQ to stream frames between applications. This makes it trivial to attach things like visualizers, or if you feel so inclined, run your laser completely via IP. As long as there’s a daemon to run the adapter at the other end, you can route your laser graphics any way you see fit.”
What inspired you to make LZR?
“It started with an early love of lighting. My father is a professional lighting designer, and I always loved tagging along when I was little. I was introduced to automated lights, and that just about blew my little mind. I was hooked at an early age, and spent many summer days choreographing light-shows in my garage. From that starting point, lasers were an obvious next step.
The lasers, the glass, the projector, and the DAC. Hardware is a major part of the exhibit!
Thankfully, there’s a fantastic community of enthusiasts on the net, and plenty of information to work from. So, somewhere at the end of middle school, with the help of my brother and father, I managed to wire a couple of galvos to a DAC schematic that I’d seen floating around. It looked like a mess, but it worked! I started off running the whole setup with various pieces of freeware from other hobbyists, but I quickly ran into limitations, or wanted different functionality. So I wrote my own projection software in Visual Basic (I was a young programmer). I had no idea what I was doing, but that’s how you learn. Back then, linking to DLLs for serial control was certified voodoo. How do you rotate 2D points? Who cares! Just copy the equation and match the variables! After some time, I managed to implement a basic drawing GUI, and a primitive effects stack. But, because VB timers can only give you millisecond resolution, I eventually abandoned this project.
Fast-forward to college years, and I’ve fallen into the black-hole of software. Specifically, the sub-black-hole of FOSS! So, with more software skills to leverage, I’ve decided to take another crack at building my own laser software.”
When you were beginning your project, why did you choose to use an open-source license for your project?
“There are many proprietary options for making laser shows. I stay away from them for the following reasons:

I can’t modify most of them beyond simple scripts and plugins.
They can be ludicrously expensive (I’m a college student).

While I am thankful for the work of the hobbyists, I often find the software to be…

Windows-only.
Freeware (free as in beer, but not open source).
Single-purposed (basic drawing, function generators, playback only, etc…).
Monolithic.

So instead of complaining about it, I will try to do better, and will share whatever I come up with. The only reason I was able to start lasing in middle school is because a bunch of people started sharing information online. So the next time some kid wants to make a wacky program for a local venue, they have access to all the tools. Open source is an amazing catalyst for creativity.”
A close-up of the projector, tuned specifically for creating an awesome light show.
Check out LZR
LZR comes with the benefit of being completely open source, and contributions are welcome. Anyone can take the code and modify it to suit their purposes.
Brendan has several other projects available on his GitHub. You can also find his contact information in his profile.

All the photos in this article were taken by Brendan Whitfield.

                    
                    
                    November 30, 2015 03:00 AM
                    
                

--------------------------------------------------------------------------
POST 33 ->
Post For Justin W. Flory: Gotta Badge ‘Em All: Telegraphist



                    
                        

                                
                                Justin W. Flory

                                (jflory7)
                        

                        Gotta Badge ‘Em All: Telegraphist
                    

                    

                        Telegraphist: What is it?
“You mapped an upstream project to a Fedora package on release-monitoring.org“
The Telegraphist badge is categorized as a “Quality [Assurance] Badge” and is defined in this Trac ticket. But what’s the real scoop behind the Telegraphist badge?
In short, Telegraphist is awarded to Fedora contributors and users who map the names of their favorite upstream projects to packages available in Fedora. This makes it easier for developers and users to monitor updates on their favorite packages, and to make sure that new versions of upstream software are packaged and made available in Fedora. The software backing this site is called Anitya, and you can use it now on release-monitoring.org! The original announcement for this site was made by Ralph Bean on the developers mailing list in February 2015.

How do I earn Telegraphist?
Earning Telegraphist is easy! First, you should look through the list of software you have installed on your system. What are some of your favorite apps? What do you use all the time and think you couldn’t live without? Try searching for it on Anitya. Does it exist?
It may be that the package you search for is already mapped. In that case, take a look through it and see if the information is still correct and relevant. Sometimes a project’s homepage may change, or they might switch the locations of where they host their code. If something’s wrong, edit it and correct the info.
Add a project to Anitya using info like this, except for your favorite project.
On the other hand, it may be that the package you want to add doesn’t exist. Viola, a badge opportunity has presented itself! You can help Fedora developers by providing the relevant info for a project. Click on “Add project” on the top bar and begin entering all the relevant info. For an example, see my mapping of the yubikey-personalization-gui in the screenshot.
The Telegraphist tl;dr

Awarded to contributors who map upstream project info to specific packages in Fedora
Automatically awarded when you map a project on release-monitoring.org
Find project info for your favorite software, and if it doesn’t exist, add it to the database

The post Gotta Badge ‘Em All: Telegraphist appeared first on Justin W. Flory's Blog.

                    
                    
                    November 30, 2015 03:00 AM
                    
                

--------------------------------------------------------------------------
POST 34 ->
Post For Emmanuel Seyman: Support Software Freedom Conservancy



                    
                        

                                
                                Emmanuel Seyman

                                (eseyman)
                        

                        Support Software Freedom Conservancy
                    

                    

                        As some of you may know, Software Freedom
Conservancy (SFC) has announced a "Supporter"
program, allowing individuals to make a donation to SFC's general operating
fund, helping them to do the things they do. Since I'm a huge fan of the work
that SFC does, I've decided to become a supporter and I encourage others to do
the same.

                    
                    
                    November 29, 2015 08:42 PM
                    
                

--------------------------------------------------------------------------
POST 35 ->
Post For Matthew Garrett: What is hacker culture?



                    
                        

                                
                                Matthew Garrett

                                (mjg59)
                        

                        What is hacker culture?
                    

                    

                        Eric Raymond, author of The Cathedral and the Bazaar (an important work describing the effectiveness of open collaboration and development), recently wrote a piece calling for "Social Justice Warriors" to be ejected from the hacker community. The primary thrust of his argument is that by calling for a removal of the "cult of meritocracy", these SJWs are attacking the central aspect of hacker culture - that the quality of code is all that matters.This argument is simply wrong.Eric's been involved in software development for a long time. In that time he's seen a number of significant changes. We've gone from computers being the playthings of the privileged few to being nearly ubiquitous. We've moved from the internet being something you found in universities to something you carry around in your pocket. You can now own a computer whose CPU executes only free software from the moment you press the power button. And, as Eric wrote almost 20 years ago, we've identified that the "Bazaar" model of open collaborative development works better than the "Cathedral" model of closed centralised development.These are huge shifts in how computers are used, how available they are, how important they are in people's lives, and, as a consequence, how we develop software. It's not a surprise that the rise of Linux and the victory of the bazaar model coincided with internet access becoming more widely available. As the potential pool of developers grew larger, development methods had to be altered. It was no longer possible to insist that somebody spend a significant period of time winning the trust of the core developers before being permitted to give feedback on code. Communities had to change in order to accept these offers of work, and the communities were better for that change.The increasing ubiquity of computing has had another outcome. People are much more aware of the role of computing in their lives. They are more likely to understand how proprietary software can restrict them, how not having the freedom to share software can impair people's lives, how not being able to involve themselves in software development means software doesn't meet their needs. The largest triumph of free software has not been amongst people from a traditional software development background - it's been the fact that we've grown our communities to include people from a huge number of different walks of life. Free software has helped bring computing to under-served populations all over the world. It's aided circumvention of censorship. It's inspired people who would never have considered software development as something they could be involved in to develop entire careers in the field. We will not win because we are better developers. We will win because our software meets the needs of many more people, needs the proprietary software industry either can not or will not satisfy. We will win because our software is shaped not only by people who have a university degree and a six figure salary in San Francisco, but because our contributors include people whose native language is spoken by so few people that proprietary operating system vendors won't support it, people who live in a heavily censored regime and rely on free software for free communication, people who rely on free software because they can't otherwise afford the tools they would need to participate in development.In other words, we will win because free software is accessible to more of society than proprietary software. And for that to be true, it must be possible for our communities to be accessible to anybody who can contribute, regardless of their background.Up until this point, I don't think I've made any controversial claims. In fact, I suspect that Eric would agree. He would argue that because hacker culture defines itself through the quality of contributions, the background of the contributor is irrelevant. On the internet, nobody knows that you're contributing from a basement in an active warzone, or from a refuge shelter after escaping an abusive relationship, or with the aid of assistive technology. If you can write the code, you can participate.Of course, this kind of viewpoint is overly naive. Humans are wonderful at noticing indications of "otherness". Eric even wrote about his struggle to stop having a viscerally negative reaction to people of a particular race. This happened within the past few years, so before then we can assume that he was less aware of the issue. If Eric received a patch from someone whose name indicated membership of this group, would there have been part of his subconscious that reacted negatively? Would he have rationalised this into a more critical analysis of the patch, increasing the probability of rejection? We don't know, and it's unlikely that Eric does either.Hacker culture has long been concerned with good design, and a core concept of good design is that code should fail safe - ie, if something unexpected happens or an assumption turns out to be untrue, the desirable outcome is the one that does least harm. A command that fails to receive a filename as an argument shouldn't assume that it should modify all files. A network transfer that fails a checksum shouldn't be permitted to overwrite the existing data. An authentication server that receives an unexpected error shouldn't default to granting access. And a development process that may be subject to unconscious bias should have processes in place that make it less likely that said bias will result in the rejection of useful contributions.When people criticise meritocracy, they're not criticising the concept of treating contributions based on their merit. They're criticising the idea that humans are sufficiently self-aware that they will be able to identify and reject every subconscious prejudice that will affect their treatment of others. It's not a criticism of a desirable goal, it's a criticism of a flawed implementation. There's evidence that organisations that claim to embody meritocratic principles are more likely to reward men than women even when everything else is equal. The "cult of meritocracy" isn't the belief that meritocracy is a good thing, it's the belief that a project founded on meritocracy will automatically be free of bias.Projects like the Contributor Covenant that Eric finds so objectionable exist to help create processes that (at least partially) compensate for our flaws. Review of our processes to determine whether we're making poor social decisions is just as important as review of our code to determine whether we're making poor technical decisions. Just as the bazaar overtook the cathedral by making it easier for developers to be involved, inclusive communities will overtake "pure meritocracies" because, in the long run, these communities will produce better output - not just in terms of the quality of the code, but also in terms of the ability of the project to meet the needs of a wider range of people.The fight between the cathedral and the bazaar came from people who were outside the cathedral. Those fighting against the assumption that meritocracies work may be outside what Eric considers to be hacker culture, but they're already part of our communities, already making contributions to our projects, already bringing free software to more people than ever before. This time it's Eric building a cathedral and decrying the decadent hordes in their bazaar, Eric who's failed to notice the shift in the culture that surrounds him. And, like those who continued building their cathedrals in the 90s, it's Eric who's now irrelevant to hacker culture.(Edited to add: for two quite different perspectives on why Eric's wrong, see Tim's and Coraline's posts) comments

                    
                    
                    November 29, 2015 06:43 PM
                    
                

--------------------------------------------------------------------------
POST 36 ->
Post For Mark J. Wielaard: Software Freedom Conservancy



                    
                        

                                
                                Mark J. Wielaard

                                (mjw)
                        

                        Software Freedom Conservancy
                    

                    

                        I support the Software Freedom Conservancy because they provide a virtual home for Free Software communities. In their own words:
Software Freedom Conservancy is a not-for-profit organization that helps promote, improve, develop, and defend Free, Libre, and Open Source Software (FLOSS) projects. Conservancy provides a non-profit home and infrastructure for FLOSS projects. This allows FLOSS developers to focus on what they do best — writing and improving FLOSS for the general public — while Conservancy takes care of the projects’ needs that do not relate directly to software development and documentation.
Some projects receive support from or are managed by companies or trade associations that benefit from the software the community produces. That is great as long as the community objectives and the company profit motives are aligned. Free Software is a good way for companies to work together. The services that the Conservancy provides allows projects to define their own terms and conditions for the community to work together. And companies can then join on equal terms. Making sure the project and community will work together for the public benefit.
Please support the Software Freedom Conservancy by donating so they will be able to provide a home to many more communities. A donation of 10 US dollars a month will make you an official sponsor. Or donate directly to one of their many member projects.
Software Freedom Conservancy Member Projects

                    
                    
                    November 29, 2015 04:05 PM
                    
                

--------------------------------------------------------------------------
POST 37 ->
Post For Alexander Todorov: Inspecting Method Arguments in Python



                    
                        

                                
                                Alexander Todorov

                                (atodorov)
                        

                        Inspecting Method Arguments in Python
                    

                    

                        How do you execute methods from 3rd party classes in a backward compatible
manner when these methods change their arguments ?
s3cmd's PR #668 is an example
of this behavior, where python-libs's httplib.py added a new parameter
to disable hostname checks. As a result of this
s3cmd broke.
One solution is to use try-except and nest as much blocks as you need to cover
all of the argument variations. In s3cmd's case we needed two nested try-except
blocks.
Another possibility is to use the
inspect module and create the argument
list passed to the method dynamically, based on what parameters are supported.
Depending on the number of parameters this may or may not be more elegant than
using try-except blocks although it looks to me a bit more human readable.
The argument list is a member named co_varnames of the code object. If you
want to get the members for a function then
inspect.getmembers(my_function.__code__)



if you want to get the members for a class method then
inspect.getmembers(MyClass.my_method.__function__.__code__)



Consider the following example
test.pyimport inspect

def hello_world(greeting, who):
    print greeting, who

class V1(object):
    def __init__(self):
        self.message = "Hello World"

    def do_print(self):
        print self.message

class V2(V1):
    def __init__(self, greeting="Hello"):
        V1.__init__(self)
        self.message = self.message.replace('Hello', greeting)

class V3(V2):
    def __init__(self, greeting="Hello", who="World"):
        V2.__init__(self, greeting)
        self.message = self.message.replace('World', who)

if __name__ == "__main__":
    print "=== Example: call the class directly ==="
    v1 = V1()
    v1.do_print()

    v2 = V2(greeting="Good day")
    v2.do_print()

    v3 = V3(greeting="Good evening", who="everyone")
    v3.do_print()

    # uncomment to see the error raised
    #v4 = V1(greeting="Good evening", who="everyone")
    #v4.do_print()

    print "=== Example: use try-except ==="
    for C in [V1, V2, V3]:
        try:
            c = C(greeting="Good evening", who="everyone")
        except TypeError:
            try:
                print "    error: nested-try-except-1"
                c = C(greeting="Good evening")
            except TypeError:
                print "    error: nested-try-except-2"
                c = C()

        c.do_print()


    print "=== Example: using inspect ==="
    for C in [V1, V2, V3]:
        members = dict(inspect.getmembers(C.__init__.__func__.__code__))
        var_names = members['co_varnames']
        args = {}

        if 'greeting' in var_names:
            args['greeting'] = 'Good morning'

        if 'who' in var_names:
            args['who'] = 'children'

        c = C(**args)
        c.do_print()



The output of the example above is as follows
=== Example: call the class directly ===
Hello World
Good day World
Good evening everyone
=== Example: use try-except ===
    error: nested-try-except-1
    error: nested-try-except-2
Hello World
    error: nested-try-except-1
Good evening World
Good evening everyone
=== Example: using inspect ===
Hello World
Good morning World
Good morning children


                    
                    
                    November 29, 2015 02:04 PM
                    
                

--------------------------------------------------------------------------
POST 38 ->
Post For Helio Chissini de Castro: Qt testing packages for Fedora and Epel on copr



                    
                        

                                
                                Helio Chissini de Castro

                                (heliocastro)
                        

                        Qt testing packages for Fedora and Epel on copr
                    

                    

                        We’re ( kde-sig ) trying slowly improve the quality of Fedora KDE and Qt, and is a lot of work. Some of the members even got to new jobs reducing the time to deal as “life” happens, which makes the work harder. Rex Dieter, our fearless ( and reasonable ) leader do a fantastic 100 people work, but still, we have enough to 100+n persons. So anything that can reduce the test time and the burden on the process are a necessary solution.
Some can arg that rawhide is a test place, and they are right, but is for a devel future, not for a soon to be stable set of packages. And we’re hardly see people using rawhide on production aside us in some very very very restricted cases and most of all, in virtual machines, not bare metal.
Then we can go to the -testing repo, which leads to Fedora buildsystem, that not helps much as every new package submitted need rely of someone say’s ok to testing stage or worst, wait minimum 7 days until reach the servers.
And is not testing per se, as if we wait for 7 days without anyone really tested the package and reach the stable with a bad version, so we’re be double screwed.
So, for example, in a few days we will have Qt 5.6.0 rc and we want that people have it as soon as possible in their machines as soon it reaches the final if possible on the release day been in our default repositories, and avoid the now more common annoyed people saying that the other ** distro already has it or why it takes so long blaming us lazy packagers.
The solution ? kde-sig Copr group ! The recent upgrade on copr allow us to have groups instead of individuals, and now this leads to current Qt repo.
With the blessing of Dan Vratil, i took his original repository and recreated over Qt5 KDE Sig Copr Repo with most current Qt possible.
You will find now 5.6.0 beta available for rawhide, f23, f22 and Epel-7 restricted on f23 and f22 to x86_64 due a build bug on i386 chroots from copr ( a segfault that we’re not managed to find ).
Still missing the qtwebengine package due the work to remove included 3rdparty source to bind to Fedora policies, and this is a hard work, even simplified a lot by Qt devs ( thanks to Allan )
So, we’re open to “business” and if you think we can improve Fedora, any ideas are welcome. 
Reinforcing: KDE Sig Copr place

                    
                    
                    November 29, 2015 01:58 PM
                    
                

--------------------------------------------------------------------------
POST 39 ->
Post For Luc de Louw: Setting up IPA with a specific CA cert subject



                    
                        

                                
                                Luc de Louw

                                (delouw)
                        

                        Setting up IPA with a specific CA cert subject
                    

                    

                        If you are doing experiments with IPA where you install and reinstall IPA servers, you may notice SSL certificate errors when connecting to an IPA server using Firefox. The reason is that always the same Organization and serial is used when the CA cert is created. Normal users are usually only affected when using the […]

                    
                    
                    November 29, 2015 10:35 AM
                    
                

--------------------------------------------------------------------------
POST 40 ->
Post For Remi Collet: QElectroTech version 0.5



                    
                        

                                
                                Remi Collet

                                (remi)
                        

                        QElectroTech version 0.5
                    

                    

                        RPM of QElectroTech version 0.5, an application to design electric diagrams, are available in remi for Fedora and Enterprise Linux 7.    Only 9 months after the version 0.4 release, the project have just released a new major version of their electric diagrams editor.Official web site : http://qelectrotech.org/ and version announcement.Installation by YUM :yum --enablerepo=remi install qelectrotechRPM (version 0.50-1) are available for Fedora ? 19 and Enterprise Linux 7 (RHEL, CentOS, ...)Updates are also on the road to official repositoriesFedora 23Fedora 22RHEL / CentOS 7Notice :a Copr / Qelectrotech repository also exists, which provides "development" versions (also 0.5 for now).

                    
                    
                    November 29, 2015 09:17 AM
                    
                

--------------------------------------------------------------------------
POST 41 ->
Post For Daniel Pocock: Disabling Dynamic Currency Conversion (DCC) in Airbnb



                    
                        

                                
                                Daniel Pocock

                                (pocock)
                        

                        Disabling Dynamic Currency Conversion (DCC) in Airbnb
                    

                    

                        In many travel-related web sites for airlines and hotels, there is some attempt to sting the customer with an extra fee by performing a currency conversion at an inflated exchange rate.  Sometimes it is only about five percent and this may not appear to be a lot but in one case a hotel was trying to use a rate that increased the cost of my booking by 30%.  This scheme/scam is referred to as Dynamic Currency Conversion (DCC).  Sometimes the website says that they are making it "easy" for you by giving you a "guaranteed" exchange rate that "might" be better than the rate from your bank.  Sometimes a hotel or restaurant in a tourist location insists that you have to pay in a currency that is not the same as the currency on your booking receipt or their menu card, this is also a DCC situation.
Reality check: these DCC rates are universally bad.  Last time I checked, my own credit card only has a 0.9% fee for currency conversion.  Credit card companies have become a lot more competitive but the travel industry hasn't.
Airbnb often claims that they want to help the little guy and empower people, at least that is the spin they were using when New York city authorities were scrutinizing their business model.  Their PR blog tries to boast about the wonderful economic impact of Airbnb.
But when it comes to DCC, the economic impact is universally bad for the customer and good for Airbnb's bosses.  Most sites just turn on DCC by default and add some little opt-out link or checkbox that you have to click every time you book.  Airbnb, however, is flouting regulations and deceiving people by trying to insist that you can't manually choose the currency you'll use for payment.
Fortunately, Visa and Mastercard have insisted that customers do have the right to know the DCC exchange rate and choose not to use DCC.
What are the rules?
Looking at the Visa system, the Visa Product and Service Rules, page 371, s5.9.7.4 include the statement that the merchant (Airbnb) must "Inform the Cardholder that Dynamic Currency Conversion is optional".
The same section also says that Airbnb must "Not use any language or procedures that may cause the Cardholder to choose Dynamic Currency Conversion by default".  When you read the Airbnb help text about currencies, do you think the language and procedures there comply with Visa's regulations?
What does Airbnb have to say about it?
I wrote to Airbnb to ask about this.  A woman called Eryn H replied "As it turns out we cannot provide our users with the option to disable currency conversion."
She went on to explain "When it comes to currency converting, we have to make sure that the payments and payouts equal to be the same amount, this is why we convert it as well as offer to convert it for you. We took it upon ourselves to do this for our users as a courtesy, not so that we can inconvenience any users.".  That, and the rest of Eryn's email, reads like a patronizing copy-and-paste response that we've all come to dread from some poorly trained customer service staff these days.
Miss H's response also includes this little gem: "Additionally, if you pay in a currency that’s different from the denominated currency of your payment method, your payment company (for example, your credit or bank card issuer) or third-party payment processor may apply a currency conversion rate or fees to your payment. Please contact your provider for information on what rates and fees may apply as these are not controlled by or known to Airbnb." and what this really means is that if Airbnb forces you to use a particular currency, with their inflated exchange rate and that is not the currency used by your credit card then you will have another currency conversion fee added by your bank, so you suffer the pain of two currency conversions.  This disastrous scenario comes about because some clever person at Airbnb wanted to show users a little "courtesy", as Miss H describes it.
What can users do?
As DCC is optional and as it is not clear on the booking page, there are other things a user can do.
At the bottom of the Airbnb page you can usually find an option to view prices in a different currency.  You can also change your country of residence in the settings to ensure you view prices in the host currency.  This allows you to see the real price, without the DCC steal.
People have been able to email or call Airbnb and have DCC disabled for their account.  Not all their telephone staff seem to understand these requests and apparently it is necessary to persist and call more than once.  In the long term, the cost savings outweigh the time it may take even if you spend 20 minutes on the phone getting it fixed.
Whatever you do, with any travel site, print a copy of the information page showing the price in host currency.  After doing that for an Airbnb booking and before making any payment, send a message to the host quoting the total price in their currency and stating DCC is not authorized.  If Airbnb does wrongly convert the currency, send a letter to the credit card company asking for a full refund/chargeback on the basis that the transaction in the wrong currency was not an authorized transaction.  It is important to ensure that you do not agree to the payment using Verified-by-Visa or Mastercard Securecode and do not pay with a debit card as these things can undermine your chances of a successful chargeback.
The chargeback rules are very clear about this.  On the Visa website, the Guide for the Lodging Industry describes all the chargeback reason codes.  On page 46, reason code 76 is described for cases such as these:
Cardholder was not advised that Dynamic Currency Conversion (DCC) would occur
Cardholder was refused the choice of paying in the merchant’s local currency
If you feel that Airbnb's web site was not operating in compliance with these rules, while many other web sites have made the effort to do so, why shouldn't you demand a correction by your bank?  Once enough people do this, don't be surprised if Airbnb fixes their site.


                    
                    
                    November 28, 2015 05:08 PM
                    
                

--------------------------------------------------------------------------
POST 42 ->
Post For Major Hayden: Custom keyboard shortcuts for Evolution in GNOME



                    
                        

                                
                                Major Hayden

                                (mhayden)
                        

                        Custom keyboard shortcuts for Evolution in GNOME
                    

                    

                        I’ve been a big fan of Thunderbird for years, but it lacks features in some critical areas.  For example, I need Microsoft Exchange and Google Apps connectivity for my mail and contacts, but Thunderbird needs some extensions to make that connectivity easier.  There are some great extensions available, but they lack polish since they’re not part of the core product.
My muscle memory for keyboard shortcuts in Thunderbird left me fumbling in Evolution.  Some of the basics that I used regularly, such as writing a new email or collapsing/expanding threads, were wildly different.  For example, there’s no keyboard shortcut for expanding threads in Evolution by default.
The search
In my quest to adjust some of the default keyboard shortcuts for Evolution, I found lots of documentation about previous versions of GNOME in documentation and countless forum posts.  None of the old tricks, like editable menus and easily adjusted dconf settings, work any longer.
I stumbled onto an email thread from August 2015 on this very topic and I was eager to find out if GNOME 3.18’s Evolution would look at the same .config/evolution/accels file as the one mentioned in the thread.
First, I started Evolution with strace so I could review the system calls made during its startup:

strace -q -o evolution-trace.out -s 1500 evolution

Sure enough, Evolution was looking for the accels file:

$ grep accels evolution-trace.out 
open("/home/user/.config/evolution/accels", O_RDONLY) = 10
open("/home/user/.config/evolution/accels", O_WRONLY|O_CREAT|O_TRUNC, 0644) = 34

Adding custom keyboard shortcuts
Editing the accels file is easy for most changes, but be sure Evolution is stopped prior to editing the file.  The file should look something like this:

; evolution GtkAccelMap rc-file         -*- scheme -*-
; this file is an automated accelerator map dump
;
; (gtk_accel_path "<Actions>/new-source/memo-list-new" "")
; (gtk_accel_path "<Actions>/switcher/switch-to-tasks" "<Primary>4")
; (gtk_accel_path "<Actions>/mailto/add-to-address-book" "")
; (gtk_accel_path "<Actions>/mail/mail-next-thread" "")

Editing an existing shortcut is easy.  For example, the default shortcut for creating a new email is CTRL-SHIFT-M:

; (gtk_accel_path "<Actions>/new-item/mail-message-new" "<Primary><Shift>m")

I prefer Thunderbird’s default of CTRL-N for new emails:

(gtk_accel_path "<Actions>/new-item/mail-message-new" "<Primary>n")

Those edits are quite easy, but things get interesting with other characters.  For example, Thunderbird uses the asterisk (*) for expanding threads and backslash (\) for collapsing them.  Those characters are special in the context of the accels file and they can’t be used.  Here’s an example of how to set keyboard shortcuts with those:

(gtk_accel_path "<Actions>/mail/mail-threads-expand-all" "asterisk")
(gtk_accel_path "<Actions>/mail/mail-threads-collapse-all" "backslash")

To determine the names of those special characters, use xmodmap:

$ xmodmap -pk | grep backslash
     51     0x005c (backslash)  0x007c (bar)    0x005c (backslash)  0x007c (bar)

Checking your work
Once you make your adjustments, Evolution should display those new keyboard shortcuts in its menus.  For example, here’s my new shortcut for writing new emails:

Go back and adjust as many of the shortcuts as necessary.  However, remember to quit Evolution before editing the file.
The post Custom keyboard shortcuts for Evolution in GNOME appeared first on major.io.

                    
                    
                    November 28, 2015 05:33 AM
                    
                

--------------------------------------------------------------------------
POST 43 ->
Post For Debarshi Ray: The goats have strayed into GNOME



                    
                        

                                
                                Debarshi Ray

                                (rishi)
                        

                        The goats have strayed into GNOME
                    

                    

                        Here is a glimpse of what I have been doing lately.


The screenshots feature the photo please wait… by Garrett LeSage available under a Creative Commons Attribution-ShareAlike license.   

                    
                    
                    November 27, 2015 06:28 PM
                    
                

--------------------------------------------------------------------------
POST 44 ->
Post For Niels de Vos: Hurry up, only a few days left to do the 2015 Gluster Community Survey



                    
                        

                                
                                Niels de Vos

                                (devos)
                        

                        Hurry up, only a few days left to do the 2015 Gluster Community Survey
                    

                    

                        The Gluster Community provides packages for Fedora, CentOS, Debian, Ubuntu, NetBSD and other distributions. All users are important to us, and we really like to hear how Gluster is (not?) working out for you, or what improvements are most wanted. It is easy to pass this information (anonymously) along through this years survey (it's a Google form). If you would like to comment on the survey itself, please get in touch with Amye.

                    
                    
                    November 27, 2015 06:27 PM
                    
                

--------------------------------------------------------------------------
POST 45 ->
Post For Remi Collet: Forum PHP in Paris 2015



                    
                        

                                
                                Remi Collet

                                (remi)
                        

                        Forum PHP in Paris 2015
                    

                    

                        Back from Forum PHP Paris 2015.First, a huge thanks to AFUP for the organization of this great event, as always, reception was beyond reproach.This event was, once more, a great opportunity for many and rewarding meetings with lot of  PHP developers and users.This year was exceptional, because PHP is 20 years old, AFUP is 15 years old and of course because of upcoming  PHP version 7:<figure style="{figureStyle}"><figcaption> </figcaption></figure>On the photo : (top) Derick Rethans, Anatol Belski, me, Zeev Suraski, (bottom) Pierre Joye, Rasmus Lerdorf, Bob Weinand and Nikita Popov.More photos on Flickr.I had the change to give a talk about collaboration between upstream (projects) and downstream (distribution) with an important part about QA management by the Fedora project.Read the slides: Paris2015.pdf.Feedback seems good, see joind.id.I waiting for next meetings.

                    
                    
                    November 27, 2015 01:15 PM
                    
                

--------------------------------------------------------------------------
POST 46 ->
Post For Fabian Deutsch: All namespaces currently used



                    
                        

                                
                                Fabian Deutsch

                                (fabiand)
                        

                        All namespaces currently used
                    

                    

                        Reminder to myself:

readlink /proc/*/task/*/ns/* | sort -u


                    
                    
                    November 27, 2015 01:11 PM
                    
                

--------------------------------------------------------------------------
POST 47 ->
Post For Christian Jantz: Configure Fedora 23 firewalld to allow nfs (Vagrant)



                    
                        

                                
                                Christian Jantz

                                (thereaper)
                        

                        Configure Fedora 23 firewalld to allow nfs (Vagrant)
                    

                    

                        So today I have been trying to test some puppet modules in Vagrant but the machine bootup got stuck when trying to mount the nfs shares.
Some research showed, that firewalld and vagrant are not what you could call best friends, so basically the ports are blocked so the Virtualbox or libvirt (for example) connection tries get stuck in the firewall.
Here is a little script you need to run as root in order to allow nfs on your machine and be able to work with Vagrant like you did before again. Please note: This is for the Workstation version! You might need to change the zones for the server or cloud installations.
firewall-cmd --zone FedoraWorkstation --change-interface vboxnet0
firewall-cmd --zone FedoraWorkstation --permanent --add-service nfs
firewall-cmd --zone FedoraWorkstation --permanent --add-service rpc-bind
firewall-cmd --zone FedoraWorkstation --permanent --add-service mountd
firewall-cmd --zone FedoraWorkstation --permanent --add-port 2049/udp
firewall-cmd --reload

What this script does? It adds the vboxnet0 adapter Virtualbox uses to be taken care of by the FedoraWorkstation zone, allows all ports needed permanently (to survive reboots) and reloads the iptables rulesets created by firewalld.

                    
                    
                    November 27, 2015 10:36 AM
                    
                

--------------------------------------------------------------------------
POST 48 ->
Post For Chris Brown: More on Satellite 6.1 provisioning



                    
                        

                                
                                Chris Brown

                                (snecker)
                        

                        More on Satellite 6.1 provisioning
                    

                    

                        Satellite 6.1 supposedly supports bonded network interfaces. If it does, we’ve yet to get it working.
To be fair, this is a slightly more complex setup with two interfaces on separate cards heading to separate switches using LACP for resilience which is more complex than balancing. There are then a number of virtual interfaces hanging off this on separate vlans.
However even without the VLAN interfaces in play, a basic bond fails and we are then presented with a failure cascade.

Foreman (the part of Satellite that controls provisioning) decides to change the IP of the provisioning node, not sure why, support case currently open. This happens whatever you do. Update – see below
You then delete the node which runs fine but leaves a dangling entry in DHCP because the MAC address has changed
You then have to edit the lease file to remove the entry and restart the daemon
Leave this to long and Satellite accepts fact uploads from the deleted node, adding it back into the foreman database and preventing re-provisioning. You then have to run db removal commands alluded to in my previous post. Update – see below

I have back-ported this fix:
http://projects.theforeman.org/issues/10607
which seems to prevent duplicate bonds getting created (another problem) but so far it hasn’t been an easy ride.
If you’re looking at using Satellite 6.1 to provision bonded networks (these are RHEL 7.2 machines) then I would avoid and use snippets, which is what we have done here and appear to be through the worst of the above.
Alternatively consider later versions of foreman with better bonding support?
Update: I have discovered that setting the following:
ignore_puppet_facts_for_provisioning=true
resolved the MAC address changing issue
and
create_new_host_when_report_is_uploaded=false
create_new_host_when_facts_are_uploaded=false
resolves hosts getting re-added to the database after deletion.   

                    
                    
                    November 27, 2015 10:10 AM
                    
                

--------------------------------------------------------------------------
POST 49 ->
Post For Remi Collet: PHP version 5.6.16



                    
                        

                                
                                Remi Collet

                                (remi)
                        

                        PHP version 5.6.16
                    

                    

                        RPM of PHP version 5.6.16 are available in remi repository for Fedora ? 21 and  remi-php56 repository for Fedora ? 20 and Enterprise Linux (RHEL, CentOS).    Version announcements:PHP 5.6.16 Release AnnoucementInstallation : read the Repository configuration and choose your version and installation mode.Replacement of default PHP by version 5.6 installation (simplest):yum-config-manager --enable remi-php56
yum updateParallel installation of version 5.6 as Software Collection (x86_64 only):yum install php56And soon in the official updates:Fedora 23 - PHP 5.6.16Fedora 22 - PHP 5.6.16To be noticed : EL7 rpm are build using RHEL-7.1EL6 rpm are build using RHEL-6.7a lot of new extensions are also available, see the PECL extension RPM status pageInformation, read:Migrating from PHP 5.4.x to PHP 5.5.xMigrating from PHP 5.5.x to PHP 5.6.xBase packages (php)Software Collections (php56)

                    
                    
                    November 27, 2015 06:11 AM
                    
                

--------------------------------------------------------------------------
POST 50 ->
Post For Fedora Community Blog: FESCo Elections: Interview with Germano Massullo (Caterpillar / germano)



                    
                        

                                
                                Fedora Community Blog

                                (admin)
                        

                        FESCo Elections: Interview with Germano Massullo (Caterpillar / germano)
                    

                    

                        Fedora Engineering Steering Council badge
This is a part of the FESCo Elections Interviews series. Voting is open to all Fedora contributors. The  voting period starts on Tuesday, December 08 and closes promptly at 23:59:59 UTC on Monday, December 14th. Please read the responses from candidates and make your choices carefully. Feel free to ask questions to the candidates here (preferred) or elsewhere!
Interview with Germano Massullo

Fedora Account: germano
IRC: Caterpillar (usually in #fedora-it, #fedora-kde)
Fedora User Wiki Page


What is your background in Fedora? What have you worked on and what are you doing now?
I am a Fedora user since 2009.
I co-maintain various packages: BOINC, darktable, LemonPOS and ownCloud client package.
I do tests of Fedora pre-releases in order to have the most stable releases and I am proudly involved in the bug reporting process because I think that the best help you can provide to developers, is helping them finding issues in their software.
I participate in English-Italian translations, documentation editing and I actually provide support to users in the Fedora website and mailing list of my country.
Given that I am a KDE Plasma user, I hope to have, soon, some free time to study the KDE infrastructure, in order to give my help to the KDE SIG.
Do you think Fedora should be time based or more feature driven distribution? Or compromise?
I think that the actual Fedora paradigm is a good compromise between them: we have two releases per year and each of them with a 13 months support. Fedora updates policy states that package maintainers should introduce a major update for each release, providing to users the possibility to use the old version (using the n-1 Fedora release) or the bleeding edge version (using the latest ‘n’ Fedora release).
What are the most pressing issues facing Fedora today (from engineering POV)? What should we do about them?
One of the pressing issues I have been personally involved in last months is about softwares that ship bundled libraries. There is a very important photo editing software that ships a library that concerns the core of its features. We contacted the upstream developers and we came to the conclusion that it was not possible to de-bundle it, so the Fedora “authorities” had to decide if not ship the affected software or to create a temporarily exception. Fedora Packaging Committee decided for the second solution.
Personally I am for being as much as possible in compliance with the Fedora Packaging Guidelines, but the temporarily exception procedure allows us to deal with problems such the one I just mentioned. I think that it is important especially when we are dealing with softwares that are too important to be rejected, obviously keeping security needs at first place over all.
What are your interests and experience outside of Fedora? What of those things will help you in this role?
Concerning information technology, my main interests outside Fedora are in grid computing platforms, in geodata handling and metropolitan area wireless networks. I don’t know if they can help me in this role, but I think that the grid computing platforms can apply in Fedora Cloud area of interest.
Anything else voters should know about you?
I am from Rome, Italy. On my wiki page here you can find more details about me.
I really care about distributed computing for helping medical research. If you have some time, please give a look to the BOINC project here.
How can FESCo do a better job communicating with the rest of the Fedora community, or do you feel that FESCo is already doing well here?
I had and I am having good experiences in communicating with FESCo, I am very often in contact with some of its components for many various reasons and they always have been nice, polite and available to provide their help.
What can you accomplish as part of FESCo that you couldn’t accomplish as a contributor to Fedora without sitting on FESCo?
As FESCo member I could help Fedora contributors in solving their problems and listening to their needs. Moreover I can bring my vision of things in the decision process.
With the advent of Fedora Council now, what do you see as the significance of FESCO in Fedora project?
Council is the top-level community leadership but I don’t think that we have overlap between FESCo and Council areas of interests. FESCo is pretty technical, Council instead has many other responsibilities.
Do you think FESCo can help with the reduction of the backlog of >400 packages awaiting review?
I think that the FESCo could propose some new guidelines: for example suggesting that each proven packager/sponsor should do a certain amount of review during a year or the person will be removed from such teams. On the other hand, what we need the most, is some new contributors, the community is doing a great job, but sometimes we feel that if we had more contributors, many problems could be solved in less time. For this task we need a support from Fedora ambassadors that everyday do a wonderful work in promoting the Project and seeking for new contributors.
What’s your point of view about library bundling in packages?
I have already explained previously my point of view about this in my answer to “What are the most pressing issues facing Fedora today (from engineering POV)? What should we do about them?”  
The post FESCo Elections: Interview with Germano Massullo (Caterpillar / germano) appeared first on Fedora Community Blog.

                    
                    
                    November 27, 2015 03:00 AM
                    
                

--------------------------------------------------------------------------

		***LIST OF HYPERLINKS IN POSTS***		




LINKS IN POST https://www.dragonsreach.it/2015/12/02/three-years-and-counting/ ->
https://www.dragonsreach.it
https://www.dragonsreach.it/about-me
#top
https://plus.google.com/115250422803614415116/posts
http://www.digitalprognosis.com/
https://www.gnome.org/news/2013/03/behind-the-scene-andrea-veri-is-new-gnome-part-time-sysadmin/
https://en.wikipedia.org/wiki/Karen_Sandler
https://www.pagerduty.com
http://www.nongnu.org/rdiff-backup/
https://wiki.gnome.org/Sysadmin/Apprentices
https://account.gnome.org
https://wiki.gnome.org/Sysadmin/SOP
https://mail.gnome.org/archives/infrastructure-announce/2013-May/msg00000.html
https://mail.gnome.org/archives/infrastructure-announce/2014-March/msg00000.html
http://mirrorbrain.org/
https://fedorahosted.org/ipsilon/
https://mail.gnome.org/archives/foundation-announce/2015-November/msg00003.html
http://jeff.ecchi.ca/
https://mail.gnome.org/archives/foundation-announce/2010-June/msg00000.html
https://en.wikipedia.org/wiki/Stormy_Peters
http://stormyscorner.com/2010/03/one-step-closer-to-a-sys-admin.html
https://www.bestpractical.com/rt/
https://plus.google.com/share?url=https://www.dragonsreach.it/2015/12/02/three-years-and-counting/
http://twitter.com/share?url=https://www.dragonsreach.it/2015/12/02/three-years-and-counting/&text=Three+years+and+counting+
http://www.facebook.com/sharer.php?u=https://www.dragonsreach.it/2015/12/02/three-years-and-counting/
http://www.linkedin.com/shareArticle?mini=true&url=https://www.dragonsreach.it/2015/12/02/three-years-and-counting/
http://www.digg.com/submit?url=https://www.dragonsreach.it/2015/12/02/three-years-and-counting/
http://reddit.com/submit?url=https://www.dragonsreach.it/2015/12/02/three-years-and-counting/&title=Three years and counting
http://www.stumbleupon.com/submit?url=https://www.dragonsreach.it/2015/12/02/three-years-and-counting/&title=Three years and counting
mailto:?subject=Three years and counting&body=%20https://www.dragonsreach.it/2015/12/02/three-years-and-counting/
#gplus-tab
#wordpress-tab
/2015/12/02/three-years-and-counting/#respond
https://plus.google.com/u/0/+AndreaVeri/posts
https://twitter.com/andrea_veri
https://it.linkedin.com/pub/andrea-veri/91/3a0/bb2/
https://www.dragonsreach.it/rss
https://www.dragonsreach.it/
mailto:aretha.battistutta@gmail.com


LINKS IN POST http://danielpocock.com/is-giving-money-to-conservancy-the-best-course-of-action ->
#main-content-area
/
/blog
/contact
/open-source-software-projects
/rss.xml
https://twitter.com/Daniel_Pocock
/
/blog
/blog/3
http://sfconservancy.org/news/2015/nov/23/2015fundraiser/
http://sfconservancy.org/copyleft-compliance/
https://lists.debian.org/debian-project/2015/12/msg00021.html
https://projects.propublica.org/docdollars/
https://wiki.debconf.org/wiki/DebConf13/VolunteerCoordination#Dishwashing_.28only_evening.29
http://lists.debconf.org/lurker/message/20130708.203836.da5c85ef.en.html
http://danielpocock.com/tags/airbnb
https://blog.mozilla.org/blog/2015/10/23/mozilla-launches-open-source-support-program/
/blog/3
/user/login?destination=comment/reply/280%23comment-form
/is-giving-money-to-conservancy-the-best-course-of-action
/disabling-dcc-on-airbnb
/elfpatch
/drone-strikes-for-molenbeek-brussels
/databases-of-muslims-and-homosexuals
/improving-drucall-and-jscommunicator-user-interface
/quick-start-blender-video-editing
/migrating-data-from-windows-phones
/how-much-video-ram-for-a-4k-monitor
/building-teams-around-sip-and-xmpp-in-debian-and-fedora
/blog
http://drupal.org


LINKS IN POST https://blogs.gnome.org/hughsie/2015/12/02/openhardware-and-code-signing-update/ ->


		***LINKS OF IMAGES PRESENT IN POSTS***		




IMAGES PRESENT IN POST https://www.dragonsreach.it/2015/12/02/three-years-and-counting/ ->
https://www.dragonsreach.it/wp-content/themes/dragonsreach_v2/images/averi.jpg
https://www.dragonsreach.it/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/google.png
https://www.dragonsreach.it/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/twitter.png
https://www.dragonsreach.it/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/facebook.png
https://www.dragonsreach.it/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/linkedin.png
https://www.dragonsreach.it/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/diggit.png
https://www.dragonsreach.it/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/reddit.png
https://www.dragonsreach.it/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/stumbleupon.png
https://www.dragonsreach.it/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/email.png
https://www.dragonsreach.it/wp-content/plugins/gplus-comments/assets/images/icons/monotone/gplus.png
https://www.dragonsreach.it/wp-content/plugins/gplus-comments/assets/images/icons/monotone/wordpress.png
https://www.dragonsreach.it/wp-content/themes/dragonsreach_v2/images/icons/google+.png
https://www.dragonsreach.it/wp-content/themes/dragonsreach_v2/images/icons/twitter.png
https://www.dragonsreach.it/wp-content/themes/dragonsreach_v2/images/icons/linkedin.png
https://www.dragonsreach.it/wp-content/themes/dragonsreach_v2/images/icons/rss.png


IMAGES PRESENT IN POST http://danielpocock.com/is-giving-money-to-conservancy-the-best-course-of-action ->
/sites/www.pocock.com.au/files/images/side-geysers.jpg
http://danielpocock.com/misc/feed.png
http://www.tqlkg.com/image-7164185-11260198


IMAGES PRESENT IN POST https://blogs.gnome.org/hughsie/2015/12/02/openhardware-and-code-signing-update/ ->

>>> 